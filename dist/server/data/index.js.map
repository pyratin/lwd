{"version":3,"sources":["../../../js/server/data/index.js"],"names":["find","query","options","projection","sort","skip","limit","collectionName","db","Promise","resolve","reject","collection","toArray","error","res","findOne","findOneAndUpdate","filter","update","value","findOneAndDelete"],"mappings":"AAAA;;;;;;;AAEA,IAAMA,IAAI,GAAG,SAAPA,IAAO,GAUR;AAAA,MATHC,KASG,uEATK,EASL;AAAA,MARHC,OAQG,uEARO;AACRC,IAAAA,UAAU,EAAE,EADJ;AAERC,IAAAA,IAAI,EAAE,EAFE;AAGRC,IAAAA,IAAI,EAAE,CAHE;AAIRC,IAAAA,KAAK,EAAE;AAJC,GAQP;AAAA,MAFHC,cAEG;AAAA,MADHC,EACG;AAEH,SAAO,IAAIC,OAAJ,CACL,UACEC,OADF,EAEEC,MAFF,EAGK;AAEH,WAAOH,EAAE,CAACI,UAAH,CACLL,cADK,EAGJP,IAHI,CAIHC,KAJG,EAKHC,OALG,EAOJW,OAPI,CAQH,UACEC,KADF,EAEEC,GAFF,EAGK;AAEH,UACED,KADF,EAEE;AAEA,eAAOH,MAAM,CACXG,KADW,CAAb;AAGD;;AAED,aAAOJ,OAAO,CACZK,GADY,CAAd;AAGD,KAzBE,CAAP;AA2BD,GAjCI,CAAP;AAmCD,CA/CD;;;;AAiDA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CACdf,KADc,EASX;AAAA,MAPHC,OAOG,uEAPO;AACRC,IAAAA,UAAU,EAAE,EADJ;AAERC,IAAAA,IAAI,EAAE,EAFE;AAGRC,IAAAA,IAAI,EAAE;AAHE,GAOP;AAAA,MAFHE,cAEG;AAAA,MADHC,EACG;AAEH,SAAO,IAAIC,OAAJ,CACL,UACEC,OADF,EAEEC,MAFF,EAGK;AAEH,WAAOH,EAAE,CAACI,UAAH,CACLL,cADK,EAGJS,OAHI,CAIHf,KAJG,EAKHC,OALG,EAMH,UACEY,KADF,EAEEC,GAFF,EAGK;AAEH,UACED,KADF,EAEE;AAEA,eAAOH,MAAM,CACXG,KADW,CAAb;AAGD;;AAED,aAAOJ,OAAO,CACZK,GADY,CAAd;AAGD,KAvBE,CAAP;AAyBD,GA/BI,CAAP;AAiCD,CA5CD;;;;AA8CA,IAAME,gBAAgB,GAAG,SAAnBA,gBAAmB,CACvBC,MADuB,EAEvBC,MAFuB,EAGvBjB,OAHuB,EAIvBK,cAJuB,EAKvBC,EALuB,EAMpB;AAEH,SAAO,IAAIC,OAAJ,CACL,UACEC,OADF,EAEEC,MAFF,EAGK;AAEH,WAAOH,EAAE,CAACI,UAAH,CACLL,cADK,EAGJU,gBAHI,CAIHC,MAJG,EAKHC,MALG,EAMHjB,OANG,EAOH,UACEY,KADF,QAKK;AAAA,UAFMC,GAEN,QAFDK,KAEC;;AAEH,UACEN,KADF,EAEE;AAEA,eAAOH,MAAM,CACXG,KADW,CAAb;AAGD;;AAED,aAAOJ,OAAO,CACZK,GADY,CAAd;AAGD,KA1BE,CAAP;AA4BD,GAlCI,CAAP;AAoCD,CA5CD;;;;AA8CA,IAAMM,gBAAgB,GAAG,SAAnBA,gBAAmB,CACvBH,MADuB,EAEvBhB,OAFuB,EAGvBK,cAHuB,EAIvBC,EAJuB,EAKpB;AAEH,SAAO,IAAIC,OAAJ,CACL,UACEC,OADF,EAEEC,MAFF,EAGK;AAEH,WAAOH,EAAE,CAACI,UAAH,CACLL,cADK,EAGJc,gBAHI,CAIHH,MAJG,EAKHhB,OALG,EAMH,UACEY,KADF,SAKK;AAAA,UAFMC,GAEN,SAFDK,KAEC;;AAEH,UACEN,KADF,EAEE;AAEA,eAAOH,MAAM,CACXG,KADW,CAAb;AAGD;;AAED,aAAOJ,OAAO,CACZK,GADY,CAAd;AAGD,KAzBE,CAAP;AA2BD,GAjCI,CAAP;AAmCD,CA1CD","sourcesContent":["'use strict';\n\nconst find = (\n  query = {},\n  options = {\n    projection: {},\n    sort: {},\n    skip: 0,\n    limit: 0\n  },\n  collectionName,\n  db\n) => {\n\n  return new Promise(\n    (\n      resolve,\n      reject\n    ) => {\n\n      return db.collection(\n        collectionName\n      )\n        .find(\n          query,\n          options\n        )\n        .toArray(\n          (\n            error,\n            res\n          ) => {\n\n            if (\n              error\n            ) {\n\n              return reject(\n                error\n              );\n            }\n\n            return resolve(\n              res\n            );\n          }\n        );\n    }\n  );\n};\n\nconst findOne = (\n  query,\n  options = {\n    projection: {},\n    sort: {},\n    skip: 0\n  },\n  collectionName,\n  db\n) => {\n\n  return new Promise(\n    (\n      resolve,\n      reject\n    ) => {\n\n      return db.collection(\n        collectionName\n      )\n        .findOne(\n          query,\n          options,\n          (\n            error,\n            res\n          ) => {\n\n            if (\n              error\n            ) {\n\n              return reject(\n                error\n              );\n            }\n\n            return resolve(\n              res\n            );\n          }\n        );\n    }\n  );\n};\n\nconst findOneAndUpdate = (\n  filter,\n  update,\n  options,\n  collectionName,\n  db\n) => {\n\n  return new Promise(\n    (\n      resolve,\n      reject\n    ) => {\n\n      return db.collection(\n        collectionName\n      )\n        .findOneAndUpdate(\n          filter,\n          update,\n          options,\n          (\n            error,\n            {\n              value: res\n            }\n          ) => {\n\n            if (\n              error\n            ) {\n\n              return reject(\n                error\n              );\n            }\n\n            return resolve(\n              res\n            );\n          }\n        );\n    }\n  );\n};\n\nconst findOneAndDelete = (\n  filter,\n  options,\n  collectionName,\n  db\n) => {\n\n  return new Promise(\n    (\n      resolve,\n      reject\n    ) => {\n\n      return db.collection(\n        collectionName\n      )\n        .findOneAndDelete(\n          filter,\n          options,\n          (\n            error,\n            {\n              value: res\n            }\n          ) => {\n\n            if (\n              error\n            ) {\n\n              return reject(\n                error\n              );\n            }\n\n            return resolve(\n              res\n            );\n          }\n        );\n    }\n  );\n};\n\nexport {\n  find,\n  findOne,\n  findOneAndUpdate,\n  findOneAndDelete\n};\n"],"file":"index.js"}