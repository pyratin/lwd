{"version":3,"sources":["../../../js/server/data/index.js"],"names":["listCollections","query","options","db","Promise","resolve","reject","toArray","error","res","find","collectionName","collection","findOne","countDocuments","findOneAndUpdate","filter","update","value","findOneAndDelete","deleteMany"],"mappings":"AAAA;;;;;;;AAEA,IAAMA,eAAe,GAAG,SAAlBA,eAAkB,GAInB;AAAA,MAHHC,KAGG,uEAHK,EAGL;AAAA,MAFHC,OAEG,uEAFO,EAEP;AAAA,MADHC,EACG;AAEH,SAAO,IAAIC,OAAJ,CACL,UACEC,OADF,EAEEC,MAFF,EAGK;AAEH,WAAOH,EAAE,CAACH,eAAH,CACLC,KADK,EAELC,OAFK,EAIJK,OAJI,CAKH,UACEC,KADF,EAEEC,GAFF,EAGK;AAEH,UACED,KADF,EAEE;AAEA,eAAOF,MAAM,CACXE,KADW,CAAb;AAGD;;AAED,aAAOH,OAAO,CACZI,GADY,CAAd;AAGD,KAtBE,CAAP;AAwBD,GA9BI,CAAP;AAgCD,CAtCD;;;;AAwCA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAKR;AAAA,MAJHT,KAIG,uEAJK,EAIL;AAAA,MAHHC,OAGG,uEAHO,EAGP;AAAA,MAFHS,cAEG;AAAA,MADHR,EACG;AAEH,SAAO,IAAIC,OAAJ,CACL,UACEC,OADF,EAEEC,MAFF,EAGK;AAEH,WAAOH,EAAE,CAACS,UAAH,CACLD,cADK,EAGJD,IAHI,CAIHT,KAJG,EAKHC,OALG,EAOJK,OAPI,CAQH,UACEC,KADF,EAEEC,GAFF,EAGK;AAEH,UACED,KADF,EAEE;AAEA,eAAOF,MAAM,CACXE,KADW,CAAb;AAGD;;AAED,aAAOH,OAAO,CACZI,GADY,CAAd;AAGD,KAzBE,CAAP;AA2BD,GAjCI,CAAP;AAmCD,CA1CD;;;;AA4CA,IAAMI,OAAO,GAAG,SAAVA,OAAU,CACdZ,KADc,EAEdC,OAFc,EAGdS,cAHc,EAIdR,EAJc,EAKX;AAEH,SAAO,IAAIC,OAAJ,CACL,UACEC,OADF,EAEEC,MAFF,EAGK;AAEH,WAAOH,EAAE,CAACS,UAAH,CACLD,cADK,EAGJE,OAHI,CAIHZ,KAJG,EAKHC,OALG,EAMH,UACEM,KADF,EAEEC,GAFF,EAGK;AAEH,UACED,KADF,EAEE;AAEA,eAAOF,MAAM,CACXE,KADW,CAAb;AAGD;;AAED,aAAOH,OAAO,CACZI,GADY,CAAd;AAGD,KAvBE,CAAP;AAyBD,GA/BI,CAAP;AAiCD,CAxCD;;;;AA0CA,IAAMK,cAAc,GAAG,SAAjBA,cAAiB,GAKlB;AAAA,MAJHb,KAIG,uEAJK,EAIL;AAAA,MAHHC,OAGG,uEAHO,EAGP;AAAA,MAFHS,cAEG;AAAA,MADHR,EACG;AAEH,SAAO,IAAIC,OAAJ,CACL,UACEC,OADF,EAEEC,MAFF,EAGK;AAEH,WAAOH,EAAE,CAACS,UAAH,CACLD,cADK,EAGJG,cAHI,CAIHb,KAJG,EAKHC,OALG,EAMH,UACEM,KADF,EAEEC,GAFF,EAGK;AAEH,UACED,KADF,EAEE;AAEA,eAAOF,MAAM,CACXE,KADW,CAAb;AAGD;;AAED,aAAOH,OAAO,CACZI,GADY,CAAd;AAGD,KAvBE,CAAP;AAyBD,GA/BI,CAAP;AAiCD,CAxCD;;;;AA0CA,IAAMM,gBAAgB,GAAG,SAAnBA,gBAAmB,CACvBC,MADuB,EAEvBC,MAFuB,EAGvBf,OAHuB,EAIvBS,cAJuB,EAKvBR,EALuB,EAMpB;AAEH,SAAO,IAAIC,OAAJ,CACL,UACEC,OADF,EAEEC,MAFF,EAGK;AAEH,WAAOH,EAAE,CAACS,UAAH,CACLD,cADK,EAGJI,gBAHI,CAIHC,MAJG,EAKHC,MALG,EAMHf,OANG,EAOH,UACEM,KADF,QAKK;AAAA,UAFMC,GAEN,QAFDS,KAEC;;AAEH,UACEV,KADF,EAEE;AAEA,eAAOF,MAAM,CACXE,KADW,CAAb;AAGD;;AAED,aAAOH,OAAO,CACZI,GADY,CAAd;AAGD,KA1BE,CAAP;AA4BD,GAlCI,CAAP;AAoCD,CA5CD;;;;AA8CA,IAAMU,gBAAgB,GAAG,SAAnBA,gBAAmB,CACvBH,MADuB,EAEvBd,OAFuB,EAGvBS,cAHuB,EAIvBR,EAJuB,EAKpB;AAEH,SAAO,IAAIC,OAAJ,CACL,UACEC,OADF,EAEEC,MAFF,EAGK;AAEH,WAAOH,EAAE,CAACS,UAAH,CACLD,cADK,EAGJQ,gBAHI,CAIHH,MAJG,EAKHd,OALG,EAMH,UACEM,KADF,SAKK;AAAA,UAFMC,GAEN,SAFDS,KAEC;;AAEH,UACEV,KADF,EAEE;AAEA,eAAOF,MAAM,CACXE,KADW,CAAb;AAGD;;AAED,aAAOH,OAAO,CACZI,GADY,CAAd;AAGD,KAzBE,CAAP;AA2BD,GAjCI,CAAP;AAmCD,CA1CD;;;;AA4CA,IAAMW,UAAU,GAAG,SAAbA,UAAa,GAKd;AAAA,MAJHJ,MAIG,uEAJM,EAIN;AAAA,MAHHd,OAGG,uEAHO,EAGP;AAAA,MAFHS,cAEG;AAAA,MADHR,EACG;AAEH,SAAO,IAAIC,OAAJ,CACL,UACEC,OADF,EAEEC,MAFF,EAGK;AAEH,WAAOH,EAAE,CAACS,UAAH,CACLD,cADK,EAGJS,UAHI,CAIHJ,MAJG,EAKHd,OALG,EAMH,UACEM,KADF,EAEEC,GAFF,EAGK;AAEH,UACED,KADF,EAEE;AAEA,eAAOF,MAAM,CACXE,KADW,CAAb;AAGD;;AAED,aAAOH,OAAO,CACZI,GADY,CAAd;AAGD,KAvBE,CAAP;AAyBD,GA/BI,CAAP;AAiCD,CAxCD","sourcesContent":["'use strict';\n\nconst listCollections = (\n  query = {},\n  options = {},\n  db\n) => {\n\n  return new Promise(\n    (\n      resolve,\n      reject\n    ) => {\n\n      return db.listCollections(\n        query,\n        options\n      )\n        .toArray(\n          (\n            error,\n            res\n          ) => {\n\n            if (\n              error\n            ) {\n\n              return reject(\n                error\n              );\n            }\n\n            return resolve(\n              res\n            );\n          }\n        );\n    }\n  );\n};\n\nconst find = (\n  query = {},\n  options = {},\n  collectionName,\n  db\n) => {\n\n  return new Promise(\n    (\n      resolve,\n      reject\n    ) => {\n\n      return db.collection(\n        collectionName\n      )\n        .find(\n          query,\n          options\n        )\n        .toArray(\n          (\n            error,\n            res\n          ) => {\n\n            if (\n              error\n            ) {\n\n              return reject(\n                error\n              );\n            }\n\n            return resolve(\n              res\n            );\n          }\n        );\n    }\n  );\n};\n\nconst findOne = (\n  query,\n  options,\n  collectionName,\n  db\n) => {\n\n  return new Promise(\n    (\n      resolve,\n      reject\n    ) => {\n\n      return db.collection(\n        collectionName\n      )\n        .findOne(\n          query,\n          options,\n          (\n            error,\n            res\n          ) => {\n\n            if (\n              error\n            ) {\n\n              return reject(\n                error\n              );\n            }\n\n            return resolve(\n              res\n            );\n          }\n        );\n    }\n  );\n};\n\nconst countDocuments = (\n  query = {},\n  options = {},\n  collectionName,\n  db\n) => {\n\n  return new Promise(\n    (\n      resolve,\n      reject\n    ) => {\n\n      return db.collection(\n        collectionName\n      )\n        .countDocuments(\n          query,\n          options,\n          (\n            error,\n            res\n          ) => {\n\n            if (\n              error\n            ) {\n\n              return reject(\n                error\n              );\n            }\n\n            return resolve(\n              res\n            );\n          }\n        );\n    }\n  );\n};\n\nconst findOneAndUpdate = (\n  filter,\n  update,\n  options,\n  collectionName,\n  db\n) => {\n\n  return new Promise(\n    (\n      resolve,\n      reject\n    ) => {\n\n      return db.collection(\n        collectionName\n      )\n        .findOneAndUpdate(\n          filter,\n          update,\n          options,\n          (\n            error,\n            {\n              value: res\n            }\n          ) => {\n\n            if (\n              error\n            ) {\n\n              return reject(\n                error\n              );\n            }\n\n            return resolve(\n              res\n            );\n          }\n        );\n    }\n  );\n};\n\nconst findOneAndDelete = (\n  filter,\n  options,\n  collectionName,\n  db\n) => {\n\n  return new Promise(\n    (\n      resolve,\n      reject\n    ) => {\n\n      return db.collection(\n        collectionName\n      )\n        .findOneAndDelete(\n          filter,\n          options,\n          (\n            error,\n            {\n              value: res\n            }\n          ) => {\n\n            if (\n              error\n            ) {\n\n              return reject(\n                error\n              );\n            }\n\n            return resolve(\n              res\n            );\n          }\n        );\n    }\n  );\n};\n\nconst deleteMany = (\n  filter = {},\n  options = {},\n  collectionName,\n  db\n) => {\n\n  return new Promise(\n    (\n      resolve,\n      reject\n    ) => {\n\n      return db.collection(\n        collectionName\n      )\n        .deleteMany(\n          filter,\n          options,\n          (\n            error,\n            res\n          ) => {\n\n            if (\n              error\n            ) {\n\n              return reject(\n                error\n              );\n            }\n\n            return resolve(\n              res\n            );\n          }\n        );\n    }\n  );\n};\n\nexport {\n  listCollections,\n  find,\n  findOne,\n  countDocuments,\n  findOneAndUpdate,\n  findOneAndDelete,\n  deleteMany\n};\n"],"file":"index.js"}