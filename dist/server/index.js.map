{"version":3,"sources":["../../js/server/index.js"],"names":["db","port","set","use","express","path","join","process","cwd","req","res","schema","pretty","graphiql","context","get","render","title","listen","console","log","trim"],"mappings":"AAAA;;;;;;;;AAEA;;AACA;;AACA;;AAEA;;AAMA;;AACA;;AACA;;AAEA;;AAGA,8EACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAEQ,wCAFR;;AAAA;AAAA;AAAA,iBAImB,oCACf,4BADe,CAJnB;;AAAA;AAIQA,UAAAA,EAJR;AAQQC,UAAAA,IARR,GAQe,wBARf;AAAA,4CAUS,2BAEJC,GAFI,CAGH,aAHG,EAIH,KAJG,EAOJC,GAPI,CAQHC,8BACEC,iBAAKC,IAAL,CACEC,OAAO,CAACC,GAAR,EADF,EAEE,aAFF,CADF,CARG,EAgBJL,GAhBI,CAiBHC,8BACEC,iBAAKC,IAAL,CACEC,OAAO,CAACC,GAAR,EADF,EAEE,OAFF,CADF,CAjBG,EAyBJL,GAzBI,CA0BH,UA1BG;AAAA,sGA2BH,iBACEM,GADF,EAEEC,GAFF;AAAA;AAAA;AAAA;AAAA;AAAA,uDAKS,gCACL;AACEC,wBAAAA,MAAM,EAANA,kBADF;AAEEC,wBAAAA,MAAM,EAAE,IAFV;AAGEC,wBAAAA,QAAQ,EAAE,IAHZ;AAIEC,wBAAAA,OAAO,EAAE;AACPd,0BAAAA,EAAE,EAAFA,EADO;AAEPS,0BAAAA,GAAG,EAAHA;AAFO;AAJX,uBADK,EAWLA,GAXK,EAYLC,GAZK,CALT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aA3BG;;AAAA;AAAA;AAAA;AAAA,eAiDJK,GAjDI,CAkDH,gCAlDG,EAmDH,UACEN,GADF,EAEEC,GAFF,EAGK;AAEH,mBAAO,2CACLV,EADK,EAELS,GAFK,EAGLC,GAHK,CAAP;AAKD,WA7DE,EAgEJK,GAhEI,CAiEH,GAjEG,EAkEH,UACEN,GADF,EAEEC,GAFF,EAGK;AAEH,mBAAOA,GAAG,CAACM,MAAJ,CACL,OADK,EAEL;AACEC,cAAAA,KAAK,EAAE;AADT,aAFK,CAAP;AAMD,WA7EE,EAgFJC,MAhFI,CAiFHjB,IAjFG,EAkFH,YAAM;AAEJ;AACAkB,YAAAA,OAAO,CAACC,GAAR,CACE,wDAEInB,IAFJ,iBAII,2BAJJ,yBAOGoB,IAPH,EADF;AAWA,mBACE,IADF;AAGD,WAnGE,CAVT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CADF","sourcesContent":["'use strict';\n\nimport path from 'path';\nimport express from 'express';\nimport expressGraphql from 'express-graphql';\n\nimport {\n  titleGet,\n  portGet,\n  nodeEnvGet,\n  mongoUriGet\n} from './fns/variable';\nimport schema from './schema';\nimport mongoClientConnect from './fns/mongoClientConnect';\nimport mediaOutputFolderInit from \n  './fns/mediaOutputFolderInit';\nimport movieOutputGifRouteHandle from \n  './fns/movieOutputGifRouteHandle';\n\n(\n  async () => {\n\n    await mediaOutputFolderInit();\n\n    const db = await mongoClientConnect(\n      mongoUriGet()\n    );\n\n    const port = portGet();\n\n    return express()\n\n      .set(\n        'view engine',\n        'ejs'\n      )\n      \n      .use(\n        express.static(\n          path.join(\n            process.cwd(),\n            'dist/client'\n          )\n        )\n      )\n\n      .use(\n        express.static(\n          path.join(\n            process.cwd(),\n            'media'\n          )\n        )\n      )\n\n      .use(\n        '/graphql',\n        async (\n          req,\n          res\n        ) => {\n\n          return expressGraphql(\n            {\n              schema,\n              pretty: true,\n              graphiql: true,\n              context: {\n                db,\n                req\n              }\n            }\n          )(\n            req,\n            res\n          );\n        }\n      )\n\n      .get(\n        '/output/:movieGif(\\\\w{24}.gif)',\n        (\n          req,\n          res\n        ) => {\n\n          return movieOutputGifRouteHandle(\n            db,\n            req,\n            res\n          );\n        }\n      )\n\n      .get(\n        '*',\n        (\n          req,\n          res\n        ) => {\n\n          return res.render(\n            'index',\n            {\n              title: titleGet()\n            }\n          );\n        }\n      )\n\n      .listen(\n        port,\n        () => {\n\n          // eslint-disable-next-line no-console\n          console.log(\n            `\n              listening at http://localhost:${\n                port\n              } in ${\n                nodeEnvGet()\n              } mode\n            `\n              .trim()\n          );\n\n          return (\n            null\n          );\n        }\n      );\n  }\n)();\n"],"file":"index.js"}