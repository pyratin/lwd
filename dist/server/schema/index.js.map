{"version":3,"sources":["../../../js/server/schema/index.js"],"names":["viewerType","GraphQLObjectType","name","fields","id","type","GraphQLID","resolve","viewerId","_id","text","GraphQLString","queryType","viewer","movieSearchResultType","title","snippet","MovieSearchMutation","inputFields","GraphQLNonNull","outputFields","results","GraphQLList","mutateAndGetPayload","MovieCreateMutation","path","args","movieId","req","toString","trim","db","mutationType","movieSearch","movieCreate","GraphQLSchema","query","mutation"],"mappings":"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","sourcesContent":["'use strict';\n\nimport {\n  GraphQLSchema,\n  GraphQLObjectType,\n  GraphQLID,\n  GraphQLString,\n  GraphQLNonNull,\n  GraphQLList\n} from 'graphql';\nimport {\n  mutationWithClientMutationId\n} from 'graphql-relay';\n\nimport viewerGet from './fns/viewer';\nimport movieSearch from './mutations/movieSearch';\nimport movieCreate from './mutations/movieCreate';\nimport {\n  hostUrlGet\n} from '~/js/server/fns/variable';\n\nconst viewerType = new GraphQLObjectType(\n  {\n    name: 'Viewer',\n    fields() {\n\n      return {\n        id: {\n          type: GraphQLID,\n          resolve(\n            {\n              _id: viewerId\n            }\n          ) {\n\n            return (\n              viewerId\n            );\n          }\n        },\n        text: {\n          type: GraphQLString\n        }\n      };\n    }\n  }\n);\n\nconst queryType = new GraphQLObjectType(\n  {\n    name: 'QUery',\n    fields() {\n\n      return {\n        viewer: {\n          type: viewerType,\n          resolve() {\n\n            return viewerGet();\n          }\n        }\n      };\n    }\n  }\n);\n\nconst movieSearchResultType = new GraphQLObjectType(\n  {\n    name: 'MovieSearchResult',\n    fields() {\n\n      return {\n        title: {\n          type: GraphQLString\n        },\n        snippet: {\n          type: GraphQLString\n        }\n      };\n    }\n  }\n);\n\nconst MovieSearchMutation = mutationWithClientMutationId(\n  {\n    name: 'MovieSearch',\n    inputFields: {\n      text: {\n        type: new GraphQLNonNull(\n          GraphQLString\n        )\n      }\n    },\n    outputFields: {\n      viewer: {\n        type: viewerType,\n        resolve() {\n\n          return viewerGet();\n        }\n      },\n      results: {\n        type: new GraphQLList(\n          movieSearchResultType\n        ),\n        resolve(\n          results\n        ) {\n\n          return (\n            results\n          );\n        }\n      }\n    },\n    mutateAndGetPayload(\n      {\n        text\n      }\n    ) {\n\n      return movieSearch(\n        text\n      );\n    }\n  }\n);\n\nconst MovieCreateMutation = mutationWithClientMutationId(\n  {\n    name: 'MovieCreate',\n    inputFields: {\n      text: {\n        type: new GraphQLNonNull(\n          GraphQLString\n        )\n      }\n    },\n    outputFields: {\n      viewer: {\n        type: viewerType,\n        resolve() {\n\n          return viewerGet();\n        }\n      },\n      path: {\n        type: GraphQLString,\n        resolve(\n          {\n            _id: movieId\n          },\n          args,\n          {\n            req\n          }\n        ) {\n\n          return `\n            ${\n              hostUrlGet(\n                req\n              )\n            }/output/${\n              movieId.toString()\n            }.gif\n          `\n            .trim();\n        }\n      }\n    },\n    mutateAndGetPayload(\n      {\n        text\n      },\n      {\n        db\n      }\n    ) {\n\n      return movieCreate(\n        text,\n        db\n      );\n    }\n  }\n);\n\nconst mutationType = new GraphQLObjectType(\n  {\n    name: 'Mutation',\n    fields() {\n\n      return {\n        movieSearch: MovieSearchMutation,\n        movieCreate: MovieCreateMutation\n      };\n    }\n  }\n);\n\nexport default new GraphQLSchema(\n  {\n    query: queryType,\n    mutation: mutationType\n  }\n);\n"],"file":"index.js"}