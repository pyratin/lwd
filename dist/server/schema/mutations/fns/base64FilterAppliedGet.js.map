{"version":3,"sources":["../../../../../js/server/schema/mutations/fns/base64FilterAppliedGet.js"],"names":["base64FilterAppliedGetFn","base64","filter","Promise","resolve","reject","buffer","Buffer","from","replace","filterPath","path","join","process","cwd","proc","trim","encoding","error","res","stdin","write","end","_base64","reduce","memo","then","result"],"mappings":"AAAA;;;;;;;;;;;;;AAEA;;AACA;;AAIA,IAAMA,wBAAwB,GAAG,SAA3BA,wBAA2B,CAC/BC,MAD+B,EAE/BC,MAF+B,EAG5B;AAEH,SAAO,IAAIC,OAAJ,CACL,UACEC,OADF,EAEEC,MAFF,EAGK;AAEH,QAAMC,MAAM,GAAG,IAAIC,MAAM,CAACC,IAAX,CACbP,MAAM,CAACQ,OAAP,CACE,iCADF,EAEE,EAFF,CADa,EAKb,QALa,CAAf;;AAQA,QAAMC,UAAU,GAAGC,iBAAKC,IAAL,CACjBC,OAAO,CAACC,GAAR,EADiB,EAEjB,gCAFiB,EAGjBZ,MAHiB,CAAnB;;AAMA,QAAMa,IAAI,GAAG,yBACX,sBAEIL,UAFJ,yBAKGM,IALH,EADW,EAOX;AACEC,MAAAA,QAAQ,EAAE;AADZ,KAPW,EAUX,UACEC,KADF,EAEEC,GAFF,EAGK;AAEH,UACED,KADF,EAEE;AAEA,eAAOb,MAAM,CACXa,KADW,CAAb;AAGD;;AAED,aAAOd,OAAO,CACZ,iDAEIe,GAFJ,oBAKGH,IALH,EADY,CAAd;AAQD,KAhCU,CAAb;AAmCAD,IAAAA,IAAI,CAACK,KAAL,CAAWC,KAAX,CACEf,MADF;AAIAS,IAAAA,IAAI,CAACK,KAAL,CAAWE,GAAX;AACD,GA5DI,CAAP;AA8DD,CAnED;;;2FAqEe,iBACbC,OADa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAIQ,CACnB,UADmB,EAEnB,WAFmB,EAIlBC,MAJkB,CAKjB,UACEC,IADF,EAEEvB,MAFF,EAGK;AAEH,qBAAOuB,IAAI,CAACC,IAAL,CACL,UACEP,GADF,EAEK;AAEH,uBAAOnB,wBAAwB,CAC7BmB,GAD6B,EAE7BjB,MAF6B,CAAxB,CAIJwB,IAJI,CAKH,UACEC,MADF,EAEK;AAEH,yBACEA,MADF;AAGD,iBAZE,CAAP;AAcD,eAnBI,CAAP;AAqBD,aA/BgB,EAgCjBxB,OAAO,CAACC,OAAR,CACEmB,OADF,CAhCiB,CAJR;;AAAA;AAIPtB,YAAAA,MAJO;AAAA,6CA0CXA,MA1CW;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["'use strict';\n\nimport path from 'path';\nimport {\n  exec\n} from 'child_process';\n\nconst base64FilterAppliedGetFn = (\n  base64,\n  filter\n) => {\n\n  return new Promise(\n    (\n      resolve,\n      reject\n    ) => {\n\n      const buffer = new Buffer.from(\n        base64.replace(\n          /^data:image\\/(jpeg|png);base64,/,\n          ''\n        ),\n        'base64'\n      );\n\n      const filterPath = path.join(\n        process.cwd(),\n        'js/server/schema/mutations/fns',\n        filter\n      );\n\n      const proc = exec(\n        `\n          ${\n            filterPath\n          } - jpeg:-\n        `\n          .trim(),\n        {\n          encoding: 'base64'\n        },\n        (\n          error,\n          res\n        ) => {\n\n          if (\n            error\n          ) {\n\n            return reject(\n              error\n            );\n          }\n\n          return resolve(\n            `\n              data:image/jpeg;base64,${\n                res\n              }\n            `\n              .trim()\n          );\n        }\n      );\n\n      proc.stdin.write(\n        buffer\n      );\n\n      proc.stdin.end();\n    }\n  );\n};\n\nexport default async (\n  _base64\n) => {\n\n  const base64 = await [\n    'vintage3',\n    'vignette3'\n  ]\n    .reduce(\n      (\n        memo,\n        filter\n      ) => {\n\n        return memo.then(\n          (\n            res\n          ) => {\n\n            return base64FilterAppliedGetFn(\n              res,\n              filter\n            )\n              .then(\n                (\n                  result\n                ) => {\n\n                  return (\n                    result\n                  );\n                }\n              );\n          }\n        );\n      },\n      Promise.resolve(\n        _base64\n      )\n    );\n\n  return (\n    base64\n  );\n};\n"],"file":"base64FilterAppliedGet.js"}