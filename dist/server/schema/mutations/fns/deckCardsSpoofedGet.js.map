{"version":3,"sources":["../../../../../js/server/schema/mutations/fns/deckCardsSpoofedGet.js"],"names":["_NNPsGet","characters","map","index","_text","text","cardsSpoofedGetFn","card","NNPs","_NNPs","matches","reduce","memo","match","NNP","NNPIndex","_distance","distance","distanceOffset","length","_NNP","_NNPIndex","name","spoofName","slice","join","cardsSpoofedGet","_cards","_characters","_card","cardsCharacterAssignedGet","cards","character","find"],"mappings":"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","sourcesContent":["'use strict';\n\nimport plotNNPsGet from './plotNNPsGet';\nimport NNPsCrossMatchesGet from './NNPsCrossMatchesGet';\nimport cardsCharactersAssignedGet\n  from './cardsCharactersAssignedGet';\n\nconst _NNPsGet = (\n  characters\n) => {\n\n  return characters.map(\n    (\n      {\n        text: _text,\n        _text: text\n      },\n      index\n    ) => {\n\n      return {\n        text,\n        _text,\n        index\n      };\n    }\n  );\n};\n\nconst cardsSpoofedGetFn = (\n  card,\n  characters\n) => {\n\n  const NNPs = plotNNPsGet(\n    [\n      card\n    ]\n  );\n\n  const _NNPs = _NNPsGet(\n    characters\n  );\n\n  const matches = NNPsCrossMatchesGet(\n    NNPs,\n    _NNPs,\n    true\n  );\n\n  const text = matches.reduce(\n    (\n      memo,\n      match\n    ) => {\n\n      const NNP = NNPs[\n        match.NNPIndex\n      ];\n\n      const _distance = NNP.distance;\n\n      const distanceOffset = memo.length - card.text.length;\n\n      const distance = _distance + distanceOffset;\n\n      const _NNP = _NNPs[\n        match._NNPIndex\n      ];\n\n      const name = _NNP.text;\n\n      const spoofName = _NNP._text;\n\n      const text = [\n        ...memo.slice(\n          0, \n          distance\n        ),\n        spoofName,\n        ...memo.slice(\n          distance +\n          name.length\n        )\n      ]\n        .join('');\n\n      return (\n        text\n      );\n    },\n    card.text\n  );\n\n  return {\n    ...card,\n    _text: card.text,\n    text\n  };\n};\n\nconst cardsSpoofedGet = (\n  _cards,\n  _characters\n) => {\n\n  return _cards.reduce(\n    (\n      memo,\n      _card\n    ) => {\n\n      const card = cardsSpoofedGetFn(\n        _card,\n        _characters\n      );\n\n      return [\n        ...memo,\n        card\n      ];\n    },\n    []\n  );\n};\n\nconst cardsCharacterAssignedGet = (\n  cards\n) => {\n\n  return cards.reduce(\n    (\n      memo,\n      card\n    ) => {\n\n      const character = card.characters\n        .find(\n          (\n            character\n          ) => {\n\n            return (\n              character._text ===\n              card.character.text\n            );\n          }\n        );\n\n      return [\n        ...memo,\n        {\n          ...card,\n          character\n        }\n      ];\n    },\n    []\n  );\n};\n\nexport default (\n  _cards,\n  _characters\n) => {\n\n  let cards = cardsSpoofedGet(\n    _cards,\n    _characters\n  );\n\n  cards = cardsCharactersAssignedGet(\n    cards,\n    _characters\n  );\n\n  cards = cardsCharacterAssignedGet(\n    cards\n  );\n\n  return (\n    cards\n  );\n};\n"],"file":"deckCardsSpoofedGet.js"}