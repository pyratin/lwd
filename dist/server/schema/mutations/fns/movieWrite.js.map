{"version":3,"sources":["../../../../../js/server/schema/mutations/fns/movieWrite.js"],"names":["outputFolderPathString","movie","Promise","resolve","reject","outputPath","path","join","process","cwd","_id","trim","fs","writeFile","base64","replace","error"],"mappings":"AAAA;;;;;;;;;AAEA;;AACA;;AAEA,IAAMA,sBAAsB,GAAG,cAA/B;;eAGE,kBACEC,KADF,EAEK;AAEH,SAAO,IAAIC,OAAJ,CACL,UACEC,OADF,EAEEC,MAFF,EAGK;AAEH,QAAMC,UAAU,GAAGC,iBAAKC,IAAL,CACjBC,OAAO,CAACC,GAAR,EADiB,EAEjBT,sBAFiB,EAGjB,wBAEIC,KAAK,CAACS,GAFV,sBAKGC,IALH,EAHiB,CAAnB;;AAWA,WAAOC,eAAGC,SAAH,CACLR,UADK,EAELJ,KAAK,CAACa,MAAN,CAAaC,OAAb,CACE,0BADF,EAEE,EAFF,CAFK,EAML,QANK,EAOL,UACEC,KADF,EAEK;AAEH,UACEA,KADF,EAEE;AAEA,eAAOZ,MAAM,CACXY,KADW,CAAb;AAGD;;AAED,aAAOb,OAAO,CACZF,KADY,CAAd;AAGD,KAvBI,CAAP;AAyBD,GA1CI,CAAP;AA4CD,C","sourcesContent":["'use strict';\n\nimport fs from 'fs';\nimport path from 'path';\n\nconst outputFolderPathString = 'media/output';\n\nexport default (\n  (\n    movie\n  ) => {\n\n    return new Promise(\n      (\n        resolve,\n        reject\n      ) => {\n\n        const outputPath = path.join(\n          process.cwd(),\n          outputFolderPathString,\n          `\n            ${\n              movie._id\n            }.gif\n          `\n            .trim()\n        );\n\n        return fs.writeFile(\n          outputPath,\n          movie.base64.replace(\n            /^data:image\\/gif;base64,/,\n            ''\n          ),\n          'base64',\n          (\n            error\n          ) => {\n\n            if (\n              error\n            ) {\n\n              return reject(\n                error\n              );\n            }\n\n            return resolve(\n              movie\n            );\n          }\n        );\n      }\n    );\n  }\n);\n"],"file":"movieWrite.js"}