{"version":3,"sources":["../../../../../js/server/schema/mutations/fns/charactersMetaStarringAssignedGet.js"],"names":["starringCharactersGet","cards","reduce","memo","card","cardIndex","starringCardIndex","findIndex","_memo","text","character","slice","starringCardIndexes","charactersStarringCardIndexesAssignedGet","characters","starringCharacters","match","find","starringCharacter","charactersSortedByStarringCardIndexesGet","sort","a","b","charactersStarringIndexAssignedGet","map","starringIndex","_characters"],"mappings":"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","sourcesContent":["'use strict';\n\nconst starringCharactersGet = (\n  cards\n) => {\n\n  return cards.reduce(\n    (\n      memo,\n      card,\n      cardIndex\n    ) => {\n\n      const starringCardIndex = memo.findIndex(\n        (\n          _memo\n        ) => {\n\n          return (\n            _memo.text ===\n            card.character?.text\n          );\n        }\n      );\n\n      switch (\n        true\n      ) {\n\n        case (\n          !card.character\n        ) :\n\n          return (\n            memo\n          );\n\n        case (\n          starringCardIndex >=\n          0\n        ) :\n\n          return [\n            ...memo.slice(\n              0, starringCardIndex\n            ),\n            {\n              ...memo[\n                starringCardIndex\n              ],\n              starringCardIndexes: [\n                ...memo[\n                  starringCardIndex\n                ]\n                  .starringCardIndexes,\n                cardIndex\n              ]\n            },\n            ...memo.slice(\n              starringCardIndex + \n              1\n            )\n          ];\n\n        default :\n\n          return [\n            ...memo,\n            {\n              ...card.character,\n              starringCardIndexes: [\n                cardIndex\n              ]\n            }\n          ];\n      }\n    },\n    []\n  );\n};\n\nconst charactersStarringCardIndexesAssignedGet = (\n  characters,\n  cards\n) => {\n\n  const starringCharacters = starringCharactersGet(\n    cards\n  );\n\n  return characters.reduce(\n    (\n      memo,\n      character\n    ) => {\n\n      const match = starringCharacters.find(\n        (\n          starringCharacter\n        ) => {\n\n          return (\n            starringCharacter.text ===\n            character.text\n          );\n        }\n      );\n\n      return [\n        ...memo,\n        {\n          ...character,\n          starringCardIndexes: (\n            match\n          ) ?\n            match.starringCardIndexes :\n            null\n        }\n      ];\n    },\n    []\n  );\n};\n\nconst charactersSortedByStarringCardIndexesGet = (\n  characters\n) => {\n\n  return characters.sort(\n    (\n      a, b\n    ) => {\n\n      switch (\n        true\n      ) {\n\n        case (\n          a.starringCardIndexes &&\n          !b.starringCardIndexes\n        ) :\n\n          return -1;\n\n        case (\n          b.starringCardIndexes &&\n          !a.starringCardIndexes\n        ) :\n\n          return 1;\n\n        case (\n          a.starringCardIndexes?.[\n            0\n          ] >\n          b.starringCardIndexes?.[\n            0\n          ]\n        ) :\n\n          return 1;\n\n        case (\n          b.starringCardIndexes?.[\n            0\n          ] >\n          a.starringCardIndexes?.[\n            0\n          ]\n        ) :\n\n          return -1;\n      }\n    }\n  );\n};\n\nconst charactersStarringIndexAssignedGet = (\n  characters\n) => {\n\n  return characters.map(\n    (\n      character,\n      starringIndex\n    ) => {\n\n      return {\n        ...character,\n        starringIndex\n      };\n    }\n  );\n};\n\nexport default (\n  _characters,\n  cards\n) => {\n\n  let characters = charactersStarringCardIndexesAssignedGet(\n    _characters,\n    cards\n  );\n\n  characters = charactersSortedByStarringCardIndexesGet(\n    characters\n  );\n\n  characters = charactersStarringIndexAssignedGet(\n    characters\n  );\n\n  return (\n    characters\n  );\n};\n"],"file":"charactersMetaStarringAssignedGet.js"}