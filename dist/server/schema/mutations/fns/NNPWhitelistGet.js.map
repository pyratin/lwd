{"version":3,"sources":["../../../../../js/server/schema/mutations/fns/NNPWhitelistGet.js"],"names":["spoofNamesGet","spoofNamesDict","spoofNames","Object","keys","reduce","memo","key"],"mappings":"AAAA;;;;;;;;;;;AAEA;;AAEA,IAAMA,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAE1B,MAAMC,cAAc,GAAG,gCAAvB;AAEA,MAAMC,UAAU,GAAGC,MAAM,CAACC,IAAP,CACjBH,cADiB,EAGhBI,MAHgB,CAIf,UACEC,IADF,EAEEC,GAFF,EAGK;AAEH,yDACKD,IADL,uCAEKL,cAAc,CACfM,GADe,CAFnB;AAMD,GAfc,EAgBf,EAhBe,CAAnB;AAmBA,SACEL,UADF;AAGD,CA1BD;;eA4Be,oBAAM;AAEnB,uDACKF,aAAa,EADlB,IAEE,QAFF,EAGE,OAHF,EAIE,KAJF,EAME,MANF,EAOE,IAPF,EAQE,MARF,EASE,KATF;AAWD,C","sourcesContent":["'use strict';\n\nimport spoofNamesGetFn from './spoofNamesGet';\n\nconst spoofNamesGet = () => {\n\n  const spoofNamesDict = spoofNamesGetFn();\n\n  const spoofNames = Object.keys(\n    spoofNamesDict\n  )\n    .reduce(\n      (\n        memo,\n        key\n      ) => {\n\n        return [\n          ...memo,\n          ...spoofNamesDict[\n            key\n          ]\n        ];\n      },\n      []\n    );\n\n  return (\n    spoofNames\n  );\n};\n\nexport default () => {\n\n  return [\n    ...spoofNamesGet(),\n    'Hiccup',\n    'Willy',\n    'Neo',\n\n    'Will',\n    'Pi',\n    'Ping',\n    'Nux'\n  ];\n};\n"],"file":"NNPWhitelistGet.js"}