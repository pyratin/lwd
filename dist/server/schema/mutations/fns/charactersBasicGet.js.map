{"version":3,"sources":["../../../../../js/server/schema/mutations/fns/charactersBasicGet.js"],"names":["plotCharactersGet","plot","reduce","memo","sentence","Set","text","castCharactersFlatlistGet","cast","_castMemo","_cast","castIndex","castCharacters","role","castCharacterMemo","possessive","match","RegExp","trim","roleIndex","index","characterStringMatchedGet","character","_character","matchMethodIndex","matchReturned","characterLevenMatchedGet","characterTokenizedGet","map","characterFragmentMatchedGet","tokensSource","characterTokenCombinations","characterTokenCombination","join","characterToken","find","__castCharactersGetFn","castCharacter","plotCharacter","_castCharactersGetFn","_castCharacter","plotCharacters","castCharactersGetFn","castCharactersSortedGet","sort","a","b","characterExistsGet","characters","exists","castCharactersUniqueGet","castCharactersGet","charactersCastDataAssignedGet"],"mappings":"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","sourcesContent":["'use strict';\n\nimport leven from 'leven';\nimport combinations from 'combinations';\n\nimport NNPsGet from './NNPsGet';\nimport wordsTokenizedGet from './wordsTokenizedGet';\n\nconst plotCharactersGet = (\n  plot\n) => {\n\n  return plot.reduce(\n    (\n      memo,\n      sentence\n    ) => {\n\n      return [\n        ...new Set(\n          [\n            ...memo,\n            ...NNPsGet(\n              sentence.text\n            )\n          ]\n        )\n      ];\n    },\n    []\n  );\n};\n\nconst castCharactersFlatlistGet = (\n  cast\n) => {\n\n  return cast.reduce(\n    (\n      _castMemo,\n      _cast,\n      castIndex\n    ) => {\n\n      const castCharacters = NNPsGet(\n        _cast.role\n      )\n        .reduce(\n          (\n            castCharacterMemo,\n            text\n          ) => {\n\n            const possessive = !!_cast.role\n              .match(\n                new RegExp(\n                  `\n                    ${\n                      text\n                    }'s\n                  `\n                    .trim()\n                )\n              );\n\n            return [\n              ...castCharacterMemo,\n              {\n                text,\n                castIndex,\n                roleIndex: _cast.role\n                  .match(\n                    text\n                  )\n                  .index,\n                possessive\n              }\n            ];\n          },\n          []\n        );\n\n      return [\n        ..._castMemo,\n        ...castCharacters\n      ];\n    },\n    []\n  );\n};\n\nconst characterStringMatchedGet = (\n  character,\n  _character\n) => {\n\n  return (\n    character ===\n    _character\n  ) ?\n    {\n      text: _character,\n      matchMethodIndex: 0,\n      matchReturned: 'plotCharacter'\n    } :\n    null;\n};\n\nconst characterLevenMatchedGet = (\n  character,\n  _character\n) => {\n\n  return (\n    leven(\n      character,\n      _character\n    ) === 1\n  ) ?\n    {\n      text: _character,\n      matchMethodIndex: 1,\n      matchReturned: 'plotCharacter'\n    } :\n    null;\n};\n\nconst characterTokenizedGet = (\n  character\n) => {\n\n  return wordsTokenizedGet(\n    character\n  )\n    .map(\n      (\n        {\n          text\n        }\n      ) => {\n\n        return (\n          text\n        );\n      }\n    );\n};\n\nconst characterFragmentMatchedGet = (\n  character,\n  _character,\n  tokensSource\n) => {\n\n  const characterTokenCombinations = combinations(\n    characterTokenizedGet(\n      _character\n    )\n  )\n    .reduce(\n      (\n        memo,\n        characterTokenCombination\n      ) => {\n\n        return [\n          ...memo,\n          characterTokenCombination.join(\n            ' '\n          )\n        ];\n      },\n      []\n    );\n\n  const characterToken = characterTokenCombinations.find(\n    (\n      characterToken\n    ) => {\n\n      return (\n        characterToken ===\n        character\n      );\n    }\n  );\n\n  if (\n    !characterToken\n  ) {\n\n    return (\n      null\n    );\n  }\n\n  return (\n    tokensSource === \n    'plotCharacter'\n  ) ?\n    {\n      text: character,\n      matchMethodIndex: 2,\n      matchReturned: 'castCharacter'\n    } :\n    {\n      text: _character,\n      matchMethodIndex: 2,\n      matchReturned: 'plotCharacter'\n    };\n};\n\nconst __castCharactersGetFn = (\n  castCharacter,\n  plotCharacter\n) => {\n\n  let match;\n\n  switch (\n    true\n  ) {\n\n    case (\n      (\n        match = characterStringMatchedGet(\n          castCharacter.text,\n          plotCharacter\n        )\n      ) &&\n      !!match.text\n    ) :\n    case (\n      (\n        match = characterLevenMatchedGet(\n          castCharacter.text,\n          plotCharacter\n        )\n      ) &&\n      !!match.text\n    ) :\n    case (\n      (\n        match = characterFragmentMatchedGet(\n          plotCharacter,\n          castCharacter.text,\n          'plotCharacter'\n        )\n      ) &&\n      !!match.text\n    ) :\n    case (\n      (\n        match = characterFragmentMatchedGet(\n          castCharacter.text,\n          plotCharacter,\n          'castCharacter'\n        )\n      ) &&\n      !!match.text\n    ) :\n\n      return {\n        ...castCharacter,\n        ...match\n      };\n  }\n};\n\nconst _castCharactersGetFn = (\n  _castCharacter,\n  plotCharacters\n) => {\n\n  const castCharacter = plotCharacters.reduce(\n    (\n      memo,\n      plotCharacter\n    ) => {\n\n      const castCharacter = __castCharactersGetFn(\n        _castCharacter,\n        plotCharacter\n      );\n\n      if (\n        !memo &&\n        castCharacter\n      ) {\n\n        return (\n          castCharacter\n        );\n      }\n\n      return (\n        memo\n      );\n    },\n    null\n  );\n\n  return (\n    castCharacter\n  );\n};\n\nconst castCharactersGetFn = (\n  castCharacters,\n  plotCharacters\n) => {\n\n  const castCharacter = castCharacters.reduce(\n    (\n      memo,\n      _castCharacter\n    ) => {\n\n      let castCharacter = _castCharactersGetFn(\n        _castCharacter,\n        plotCharacters\n      );\n\n      if (\n        castCharacter\n      ) {\n\n        return [\n          ...memo,\n          castCharacter\n        ];\n      }\n\n      return (\n        memo\n      );\n    },\n    []\n  );\n\n  return (\n    castCharacter\n  );\n};\n\nconst castCharactersSortedGet = (\n  castCharacters\n) => {\n\n  return castCharacters.sort(\n    (\n      a, b\n    ) => {\n\n      switch (\n        true\n      ) {\n\n        case (\n          a.possessive &&\n          !b.possessive\n        ) :\n\n          return 1;\n\n        case (\n          b.possessive &&\n          !a.possessive\n        ) :\n\n          return -1;\n\n        case (\n          a.matchReturned === 'plotCharacter' &&\n          b.matchReturned === 'castCharacter'\n        ) :\n\n          return -1;\n\n        case (\n          b.matchReturned === 'plotCharacter' &&\n          a.matchReturned === 'castCharacter'\n        ) :\n\n          return 1;\n\n        case (\n          a.roleIndex >\n          b.roleIndex\n        ) :\n\n          return 1;\n\n        case (\n          b.roleIndex >\n          a.roleIndex\n        ) :\n\n          return -1;\n\n        case (\n          a.castIndex >\n          b.castIndex\n        ) :\n\n          return 1;\n\n        case (\n          b.castIndex >\n          a.castIndex\n        ) :\n\n          return -1;\n      }\n    }\n  );\n};\n\nconst characterExistsGet = (\n  character,\n  characters\n) => {\n\n  return characters.reduce(\n    (\n      memo,\n      _character\n    ) => {\n\n      const exists = __castCharactersGetFn(\n        character,\n        _character.text\n      );\n\n      if (\n        !memo &&\n        exists\n      ) {\n\n        return (\n          true\n        );\n      }\n\n      return (\n        memo\n      );\n    },\n    false\n  );\n};\n\nconst castCharactersUniqueGet = (\n  castCharacters\n) => {\n\n  return castCharacters.reduce(\n    (\n      memo,\n      castCharacter\n    ) => {\n\n      if (\n        !characterExistsGet(\n          castCharacter,\n          memo\n        )\n      ) {\n\n        return [\n          ...memo,\n          castCharacter\n        ];\n      }\n\n      return (\n        memo\n      );\n    },\n    []\n  );\n};\n\nconst castCharactersGet = (\n  cast,\n  plotCharacters\n) => {\n\n  let castCharacters = castCharactersFlatlistGet(\n    cast\n  );\n\n  castCharacters = castCharactersGetFn(\n    castCharacters,\n    plotCharacters\n  );\n\n  castCharacters = castCharactersSortedGet(\n    castCharacters\n  );\n\n  castCharacters = castCharactersUniqueGet(\n    castCharacters\n  );\n\n  return (\n    castCharacters\n  );\n};\n\nconst charactersCastDataAssignedGet = (\n  characters,\n  cast\n) => {\n\n  return characters.reduce(\n    (\n      memo,\n      character\n    ) => {\n\n      return [\n        ...memo,\n        {\n          ...character,\n          ...cast[\n            character.castIndex\n          ]\n        }\n      ];\n    },\n    []\n  )\n    .map(\n      (\n        character\n      ) => {\n\n        delete character.roleIndex;\n\n        return (\n          character\n        );\n      }\n    );\n};\n\nexport default (\n  cast,\n  plot\n) => {\n\n  const plotCharacters = plotCharactersGet(\n    plot\n  );\n\n  const castCharacters = castCharactersGet(\n    cast,\n    plotCharacters\n  );\n\n  let characters = charactersCastDataAssignedGet(\n    castCharacters,\n    cast\n  );\n\n  return (\n    characters\n  );\n};\n"],"file":"charactersBasicGet.js"}