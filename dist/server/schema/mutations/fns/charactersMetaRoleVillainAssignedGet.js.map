{"version":3,"sources":["../../../../../js/server/schema/mutations/fns/charactersMetaRoleVillainAssignedGet.js"],"names":["_NNPsGet","characters","map","index","text","_antagonistGetFn","NNP","_NNPs","matches","character","_NNPIndex","actor","gender","castIndex","antagonistGetFn","title","puppeteer","launch","args","browser","newPage","page","waitUntil","searchString","trim","type","delay","evaluate","document","querySelector","click","selector","waitForSelector","el","innerText","close","antagonist","antagonistGet","charactersGet","reduce","memo","role","_characters"],"mappings":"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","sourcesContent":["'use strict';\n\nimport puppeteer from 'puppeteer';\n\nimport plotNNPsGet from './plotNNPsGet';\nimport NNPCrossMatchesGet from './NNPCrossMatchesGet';\n\nconst _NNPsGet = (\n  characters\n) => {\n\n  return characters.map(\n    (\n      {\n        text\n      },\n      index\n    ) => {\n\n      return {\n        text,\n        index\n      };\n    }\n  );\n};\n\nconst _antagonistGetFn = (\n  characters,\n  text\n) => {\n\n  if (\n    !text\n  ) {\n\n    return (\n      null\n    );\n  }\n\n  const NNP = plotNNPsGet(\n    [\n      {\n        text\n      }\n    ]\n  )?.[\n    0\n  ];\n\n  const _NNPs = _NNPsGet(\n    characters\n  );\n\n  let matches = (\n    NNP\n  ) ?\n    NNPCrossMatchesGet(\n      NNP,\n      _NNPs\n    ) :\n    null;\n\n  const character = (\n    matches\n  ) ?\n    characters?.[\n      _NNPs?.[\n        matches?.[\n          0\n        ]?._NNPIndex\n      ]?.index\n    ] :\n    null;\n\n  return (\n    character &&\n    (\n      character.actor.gender !== \n      'woman'\n    ) &&\n    character.castIndex\n  ) ?\n    character :\n    null;\n};\n\nconst antagonistGetFn = async (\n  characters,\n  title\n) => {\n\n  const browser = await puppeteer.launch(\n    {\n      args: [\n        '--no-sandbox'\n      ]\n    }\n  );\n\n  const page = await browser.newPage();\n\n  await page.goto(\n    'https://google.com',\n    {\n      waitUntil: 'networkidle0'\n    }\n  );\n\n  const searchString =`\n    ${\n      title\n    } antagonist\n  `\n    .trim();\n\n  await page.type(\n    'input[name=q]',\n    searchString,\n    {\n      delay: 100\n    }\n  );\n\n  await page.evaluate(\n    () => {\n\n      document.querySelector(\n        'input[type=\"submit\"]'\n      )\n        .click();\n    }\n  );\n\n  const selector = '[aria-level=\"3\"][role=\"heading\"]';\n\n  await page.waitForSelector(\n    selector\n  );\n\n  const text = (\n    await page.evaluate(\n      (\n        selector\n      ) => {\n\n        const el = document.querySelector(\n          selector\n        );\n\n        return (\n          el.innerText\n        );\n      },\n      selector\n    )\n  );\n\n  await browser.close();\n\n  const antagonist = _antagonistGetFn(\n    characters,\n    text\n  );\n\n  return (\n    antagonist\n  );\n};\n\nconst antagonistGet = (\n  characters,\n  title\n) => {\n\n  return antagonistGetFn(\n    characters,\n    title\n  )\n    .catch(\n      () => {\n\n        return antagonistGet(\n          characters,\n          title\n        );\n      }\n    );\n};\n\nconst charactersGet = (\n  characters,\n  antagonist\n) => {\n\n  return characters.reduce(\n    (\n      memo,\n      character\n    ) => {\n\n      if (\n        character.text ===\n        antagonist?.text\n      ) {\n\n        return [\n          ...memo,\n          {\n            ...character,\n            role: 'villain'\n          }\n        ];\n      }\n\n      return [\n        ...memo,\n        character\n      ];\n    },\n    []\n  );\n};\n\nexport default async (\n  _characters,\n  title\n) => {\n\n  const antagonist = await antagonistGet(\n    _characters,\n    title\n  );\n\n  const characters = charactersGet(\n    _characters,\n    antagonist\n  );\n\n  return (\n    characters\n  );\n};\n"],"file":"charactersMetaRoleVillainAssignedGet.js"}