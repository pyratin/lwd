{"version":3,"sources":["../../../../../js/server/schema/mutations/fns/charactersGet.js"],"names":["plotCharactersGet","plot","reduce","memo","sentence","Set","text","castCharactersFlatlistGet","cast","_castMemo","_cast","castIndex","castCharacters","role","castCharacterMemo","roleIndex","match","index","characterStringMatchedGet","character","_character","characterLevenMatchedGet","characterTokenizedGet","map","characterFragmentMatchedGet","characterTokens","characterToken","find","length","__castCharactersGetFn","castCharacter","plotCharacter","_castCharactersGetFn","_castCharacter","plotCharacters","castCharactersGetFn","castCharactersSortedGet","sort","a","b","characterExistsGet","characters","castCharactersUniqueGet","castCharactersGet","charactersCastDataAssignedGet","plotText"],"mappings":"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","sourcesContent":["'use strict';\n\nimport leven from 'leven';\n\nimport NNPsGet from './NNPsGet';\nimport wordsTokenizedGet from './wordsTokenizedGet';\nimport charactersCategoryAssignedGet from \n  './charactersCategoryAssignedGet';\nimport charactersActorGenderAssignedGet from\n  './charactersActorGenderAssignedGet';\n\nconst plotCharactersGet = (\n  plot\n) => {\n\n  return plot.reduce(\n    (\n      memo,\n      sentence\n    ) => {\n\n      return [\n        ...new Set(\n          [\n            ...memo,\n            ...NNPsGet(\n              sentence.text\n            )\n          ]\n        )\n      ];\n    },\n    []\n  );\n};\n\nconst castCharactersFlatlistGet = (\n  cast\n) => {\n\n  return cast.reduce(\n    (\n      _castMemo,\n      _cast,\n      castIndex\n    ) => {\n\n      const castCharacters = NNPsGet(\n        _cast.role\n      )\n        .reduce(\n          (\n            castCharacterMemo,\n            text\n          ) => {\n\n            return [\n              ...castCharacterMemo,\n              {\n                text,\n                castIndex,\n                roleIndex: _cast.role\n                  .match(\n                    text\n                  )\n                  .index\n              }\n            ];\n          },\n          []\n        );\n\n      return [\n        ..._castMemo,\n        ...castCharacters\n      ];\n    },\n    []\n  );\n};\n\nconst characterStringMatchedGet = (\n  character,\n  _character\n) => {\n\n  return (\n    character ===\n    _character\n  ) ?\n    character :\n    null;\n};\n\nconst characterLevenMatchedGet = (\n  character,\n  _character\n) => {\n\n  return (\n    leven(\n      character,\n      _character\n    ) === 1\n  ) ?\n    _character :\n    null;\n};\n\nconst characterTokenizedGet = (\n  character\n) => {\n\n  return wordsTokenizedGet(\n    character\n  )\n    .map(\n      (\n        {\n          text\n        }\n      ) => {\n\n        return (\n          text\n        );\n      }\n    );\n};\n\nconst characterFragmentMatchedGet = (\n  character,\n  _character\n) => {\n\n  const characterTokens = characterTokenizedGet(\n    character\n  );\n\n  const characterToken = characterTokens.find(\n    (\n      characterToken\n    ) => {\n\n      return (\n        characterToken ===\n        _character\n      );\n    }\n  );\n\n  return (\n    (\n      characterTokens.length > 1 \n    ) &&\n    characterToken\n  ) ?\n    characterToken :\n    null;\n};\n\nconst __castCharactersGetFn = (\n  castCharacter,\n  plotCharacter\n) => {\n\n  let text;\n\n  switch (\n    true\n  ) {\n\n    case (\n      (\n        text = characterStringMatchedGet(\n          castCharacter.text,\n          plotCharacter\n        )\n      ) &&\n      !!text\n    ) :\n    case (\n      (\n        text = characterLevenMatchedGet(\n          castCharacter.text,\n          plotCharacter\n        )\n      ) &&\n      !!text\n    ) :\n    case (\n      (\n        text = characterFragmentMatchedGet(\n          castCharacter.text,\n          plotCharacter\n        )\n      ) &&\n      !!text\n    ) :\n    case (\n      (\n        text = characterFragmentMatchedGet(\n          plotCharacter,\n          castCharacter.text\n        )\n      ) &&\n      !!text\n    ) :\n\n      return {\n        ...castCharacter,\n        text\n      };\n  }\n};\n\nconst _castCharactersGetFn = (\n  _castCharacter,\n  plotCharacters\n) => {\n\n  const castCharacter = plotCharacters.reduce(\n    (\n      memo,\n      plotCharacter\n    ) => {\n\n      const castCharacter = __castCharactersGetFn(\n        _castCharacter,\n        plotCharacter\n      );\n\n      if (\n        !memo &&\n        castCharacter\n      ) {\n\n        return (\n          castCharacter\n        );\n      }\n\n      return (\n        memo\n      );\n    },\n    null\n  );\n\n  return (\n    castCharacter\n  );\n};\n\nconst castCharactersGetFn = (\n  castCharacters,\n  plotCharacters\n) => {\n\n  const castCharacter = castCharacters.reduce(\n    (\n      memo,\n      _castCharacter\n    ) => {\n\n      let castCharacter = _castCharactersGetFn(\n        _castCharacter,\n        plotCharacters\n      );\n\n      if (\n        castCharacter\n      ) {\n\n        return [\n          ...memo,\n          castCharacter\n        ];\n      }\n\n      return (\n        memo\n      );\n    },\n    []\n  );\n\n  return (\n    castCharacter\n  );\n};\n\nconst castCharactersSortedGet = (\n  castCharacters\n) => {\n\n  return castCharacters.sort(\n    (\n      a, b\n    ) => {\n\n      switch (\n        true\n      ) {\n\n        case (\n          a.roleIndex >\n          b.roleIndex\n        ) :\n\n          return 1;\n\n        case (\n          b.roleIndex >\n          a.roleIndex\n        ) :\n\n          return -1;\n\n        case (\n          a.castIndex >\n          b.castIndex\n        ) :\n\n          return 1;\n\n        case (\n          b.castIndex >\n          a.castIndex\n        ) :\n\n          return -1;\n      }\n    }\n  );\n};\n\nconst characterExistsGet = (\n  character,\n  characters\n) => {\n\n  return characters.find(\n    (\n      _character\n    ) => {\n\n      return (\n        _character.text ===\n        character.text\n      );\n    }\n  );\n};\n\nconst castCharactersUniqueGet = (\n  castCharacters\n) => {\n\n  return castCharacters.reduce(\n    (\n      memo,\n      castCharacter\n    ) => {\n\n      if (\n        !characterExistsGet(\n          castCharacter,\n          memo\n        )\n      ) {\n\n        return [\n          ...memo,\n          castCharacter\n        ];\n      }\n\n      return (\n        memo\n      );\n    },\n    []\n  );\n};\n\nconst castCharactersGet = (\n  cast,\n  plotCharacters\n) => {\n\n  let castCharacters = castCharactersFlatlistGet(\n    cast\n  );\n\n  castCharacters = castCharactersGetFn(\n    castCharacters,\n    plotCharacters\n  );\n\n  castCharacters = castCharactersSortedGet(\n    castCharacters\n  );\n\n  castCharacters = castCharactersUniqueGet(\n    castCharacters\n  );\n\n  return (\n    castCharacters\n  );\n};\n\nconst charactersCastDataAssignedGet = (\n  characters,\n  cast\n) => {\n\n  return characters.reduce(\n    (\n      memo,\n      character\n    ) => {\n\n      return [\n        ...memo,\n        {\n          ...character,\n          ...cast[\n            character.castIndex\n          ]\n        }\n      ];\n    },\n    []\n  )\n    .map(\n      (\n        character\n      ) => {\n\n        delete character.roleIndex;\n\n        return (\n          character\n        );\n      }\n    );\n};\n\nexport default async (\n  cast,\n  plot,\n  plotText\n) => {\n\n  const plotCharacters = plotCharactersGet(\n    plot\n  );\n\n  const castCharacters = castCharactersGet(\n    cast,\n    plotCharacters\n  );\n\n  let characters = charactersCastDataAssignedGet(\n    castCharacters,\n    cast\n  );\n\n  characters = await charactersCategoryAssignedGet(\n    characters,\n    plotText\n  );\n\n  characters = await charactersActorGenderAssignedGet(\n    characters\n  );\n\n  return (\n    characters\n  );\n};\n"],"file":"charactersGet.js"}