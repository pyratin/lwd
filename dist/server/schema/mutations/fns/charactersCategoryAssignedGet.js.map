{"version":3,"sources":["../../../../../js/server/schema/mutations/fns/charactersCategoryAssignedGet.js"],"names":["charactersUdAssignedGetFn","plotText","character","regExp","RegExp","text","trim","matchAll","reduce","memo","_matchAll","length","charactersUdAssignedGet","characters","Set","ud","pageCategoriesQueryGet","title","__charactersCategoryAssignedGetFn","categoryTitle","peopleCategoryStrings","peopleCategoryString","match","_charactersCategoryAssignedGetFn","categoryTitles","charactersCategoryAssignedGetFn","characterUd","then","res","pageId","Object","keys","query","pages","categories","map","charactersCategoryAssignedGet","category","Promise","resolve","charactersFilteredGet","_characters"],"mappings":"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","sourcesContent":["'use strict';\n\nimport mediawikiFetch from './mediawikiFetch';\n\nconst charactersUdAssignedGetFn = (\n  plotText,\n  character\n) => {\n\n  const regExp = new RegExp(\n    `\n      <a href=\"/wiki/([^\"]*)\"[^>]*>${\n        character.text\n      }</a>\n    `\n      .trim(),\n    'g'\n  );\n\n  const matchAll = [\n    ...plotText.matchAll(\n      regExp\n    )\n  ]\n    .reduce(\n      (\n        memo,\n        _matchAll\n      ) => {\n\n        if (\n          !memo &&\n          _matchAll.length\n        ) {\n\n          return (\n            _matchAll[\n              1\n            ]\n          );\n        }\n\n        return (\n          null\n        );\n      },\n      null\n    );\n\n  return (\n    matchAll\n  );\n};\n\nconst charactersUdAssignedGet = (\n  characters,\n  plotText\n) => {\n\n  return characters.reduce(\n    (\n      memo,\n      character\n    ) => {\n\n      return [\n        ...new Set(\n          [\n            ...memo,\n            {\n              ...character,\n              ud: charactersUdAssignedGetFn(\n                plotText,\n                character\n              )\n            }\n          ]\n        )\n      ];\n    },\n    []\n  );\n};\n\nconst pageCategoriesQueryGet = (\n  title\n) => {\n\n  return `\n    https://en.wikipedia.org/w/api.php?action=query&format=json&prop=categories&cllimit=500&redirects&titles=${\n      title\n    }\n  `;\n};\n\nconst __charactersCategoryAssignedGetFn = (\n  categoryTitle\n) => {\n\n  const peopleCategoryStrings = [\n    'female',\n    'male',\n    'woman',\n    'man',\n    'character',\n    'people'\n  ];\n\n  return peopleCategoryStrings.reduce(\n    (\n      memo,\n      peopleCategoryString\n    ) => {\n\n      if (\n        !memo &&\n        categoryTitle.match(\n          peopleCategoryString\n        )\n      ) {\n\n        return (\n          true\n        );\n      }\n\n      return (\n        memo\n      );\n    },\n    false\n  );\n};\n\nconst _charactersCategoryAssignedGetFn = (\n  categoryTitles\n) => {\n\n  return categoryTitles.reduce(\n    (\n      memo,\n      categoryTitle\n    ) => {\n\n      if (\n        !memo &&\n        __charactersCategoryAssignedGetFn(\n          categoryTitle\n        )\n      ) {\n\n        return (\n          'people'\n        );\n      }\n\n      return (\n        memo\n      );\n    },\n    null\n  );\n};\n\nconst charactersCategoryAssignedGetFn = (\n  characterUd\n) => {\n\n  return mediawikiFetch(\n    pageCategoriesQueryGet(\n      characterUd\n    )\n  )\n    .then(\n      (\n        res\n      ) => {\n\n        const pageId = Object.keys(\n          res.query.pages\n        )[\n          0\n        ];\n\n        const categoryTitles = res.query.pages[\n          pageId\n        ]\n          .categories\n          .map(\n            (\n              {\n                title\n              }\n            ) => {\n\n              return (\n                title\n              );\n            }\n          );\n\n        return _charactersCategoryAssignedGetFn(\n          categoryTitles\n        );\n      }\n    );\n};\n\nconst charactersCategoryAssignedGet = (\n  characters\n) => {\n\n  return characters.reduce(\n    (\n      memo,\n      character\n    ) => {\n\n      return memo.then(\n        (\n          res\n        ) => {\n\n          if (\n            character.ud\n          ) {\n\n            return charactersCategoryAssignedGetFn(\n              character.ud\n            )\n              .then(\n                (\n                  category\n                ) => {\n\n                  return [\n                    ...res,\n                    {\n                      ...character,\n                      category: (\n                        category\n                      ) ?\n                        category :\n                        null\n                    }\n                  ];\n                }\n              );\n          }\n\n          return [\n            ...res,\n            character\n          ];\n        }\n      );\n    },\n    Promise.resolve(\n      []\n    )\n  );\n};\n\nconst charactersFilteredGet = (\n  characters\n) => {\n\n  return characters.reduce(\n    (\n      memo,\n      character\n    ) => {\n\n      if (\n        character.ud &&\n        !character.category\n      ) {\n\n        return (\n          memo\n        );\n      }\n\n      return [\n        ...memo,\n        character\n      ];\n    },\n    []\n  )\n    .map(\n      (\n        character\n      ) => {\n\n        delete character.ud;\n\n        return (\n          character\n        );\n      }\n    );\n};\n\nexport default async (\n  _characters,\n  plotText\n) => {\n\n  let characters = charactersUdAssignedGet(\n    _characters,\n    plotText\n  );\n\n  characters =\n    await charactersCategoryAssignedGet(\n      characters\n    );\n\n  characters = charactersFilteredGet(\n    characters\n  );\n\n  return (\n    characters\n  );\n};\n"],"file":"charactersCategoryAssignedGet.js"}