{"version":3,"sources":["../../../../../js/server/schema/mutations/fns/movieDataBasicPlotGet.js"],"names":["sentencesGetFn","paragraphs","sentences","reduce","memo","paragraph","paragraphIndex","_sentences","map","text","sentenceIndex","plotText","$","cheerio","load","plotEl","remove","end","find","toArray","length","p"],"mappings":"AAAA;;;;;;;;;;;AAEA;;AAEA;;AAEA,IAAMA,cAAc,GAAG,SAAjBA,cAAiB,CACrBC,UADqB,EAElB;AAEH,MAAIC,SAAS,GAAGD,UAAU,CAACE,MAAX,CACd,UACEC,IADF,EAEEC,SAFF,EAGEC,cAHF,EAIK;AAEH,QAAMC,UAAU,GAAG,8BACjBF,SADiB,EAEjB,GAFiB,EAIhBG,GAJgB,CAKf,UACEC,IADF,EAEEC,aAFF,EAGK;AAEH,aAAO;AACLD,QAAAA,IAAI,EAAJA,IADK;AAELH,QAAAA,cAAc,EAAdA,cAFK;AAGLI,QAAAA,aAAa,EAAbA;AAHK,OAAP;AAKD,KAfc,CAAnB;;AAkBA,yDACKN,IADL,uCAEKG,UAFL;AAID,GA7Ba,EA8Bd,EA9Bc,CAAhB;AAiCA,SACEL,SADF;AAGD,CAxCD;;eA0Ce,kBACbS,QADa,EAEV;AAEH,MACE,CAACA,QADH,EAEE;AAEA,WACE,IADF;AAGD;;AAED,MAAMC,CAAC,GAAGC,oBAAQC,IAAR,CACRH,QADQ,CAAV;;AAIA,MAAMI,MAAM,GAAGH,CAAC,CACd,WADc,CAAD,CAGZI,MAHY,GAIZC,GAJY,EAAf;AAMA,MAAIhB,UAAU,GAAGc,MAAM,CACpBG,IADc,CAEb,GAFa,EAIdC,OAJc,EAAjB;;AAMA,MACE,CAAClB,UAAU,CAACmB,MADd,EAEE;AAEA,WACE,IADF;AAGD;;AAEDnB,EAAAA,UAAU,GAAGA,UAAU,CAACE,MAAX,CACX,UACEC,IADF,EAEEiB,CAFF,EAGK;AAEH,QAAIhB,SAAS,GAAGO,CAAC,CACfS,CADe,CAAD,CAGbZ,IAHa,EAAhB;AAKA,yDACKL,IAAI,IACP,EAFF,IAGEC,SAHF;AAKD,GAhBU,EAiBX,IAjBW,CAAb;AAoBA,MAAMH,SAAS,GAAGF,cAAc,CAC9BC,UAD8B,CAAhC;AAIA,SACEC,SADF;AAGD,C","sourcesContent":["'use strict';\n\nimport cheerio from 'cheerio';\n\nimport sentencesGet from './sentencesGet';\n\nconst sentencesGetFn = (\n  paragraphs\n) => {\n\n  let sentences = paragraphs.reduce(\n    (\n      memo,\n      paragraph,\n      paragraphIndex\n    ) => {\n\n      const _sentences = sentencesGet(\n        paragraph,\n        100\n      )\n        .map(\n          (\n            text,\n            sentenceIndex\n          ) => {\n\n            return {\n              text,\n              paragraphIndex,\n              sentenceIndex\n            };\n          }\n        );\n\n      return [\n        ...memo,\n        ..._sentences\n      ];\n    },\n    []\n  );\n\n  return (\n    sentences\n  );\n};\n\nexport default (\n  plotText\n) => {\n\n  if (\n    !plotText\n  ) {\n\n    return (\n      null\n    );\n  }\n\n  const $ = cheerio.load(\n    plotText\n  );\n\n  const plotEl = $(\n    'span, sup'\n  )\n    .remove()\n    .end();\n\n  let paragraphs = plotEl\n    .find(\n      'p'\n    )\n    .toArray();\n\n  if (\n    !paragraphs.length\n  ) {\n\n    return (\n      null\n    );\n  }\n\n  paragraphs = paragraphs.reduce(\n    (\n      memo,\n      p\n    ) => {\n\n      let paragraph = $(\n        p\n      )\n        .text();\n\n      return [\n        ...memo ||\n        [],\n        paragraph\n      ];\n    },\n    null\n  );\n\n  const sentences = sentencesGetFn(\n    paragraphs\n  );\n\n  return (\n    sentences\n  );\n};\n"],"file":"movieDataBasicPlotGet.js"}