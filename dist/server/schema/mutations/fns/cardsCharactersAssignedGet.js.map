{"version":3,"sources":["../../../../../js/server/schema/mutations/fns/cardsCharactersAssignedGet.js"],"names":["_NNPsGet","characters","map","index","text","cardGet","sentence","NNPs","_NNPs","matches","match","NNP","NNPIndex","_NNPIndex","distance","plot","_characters","cards","reduce","memo","card"],"mappings":"AAAA;;;;;;;;;;;;;AAEA;;AACA;;;;;;AAEA,IAAMA,QAAQ,GAAG,SAAXA,QAAW,CACfC,UADe,EAEZ;AAEH,SAAOA,UAAU,CAACC,GAAX,CACL,gBAIEC,KAJF,EAKK;AAAA,QAHDC,IAGC,QAHDA,IAGC;AAEH,WAAO;AACLA,MAAAA,IAAI,EAAJA,IADK;AAELD,MAAAA,KAAK,EAALA;AAFK,KAAP;AAID,GAZI,CAAP;AAcD,CAlBD;;AAoBA,IAAME,OAAO,GAAG,SAAVA,OAAU,CACdC,QADc,EAEdL,UAFc,EAGX;AAEH,MAAMM,IAAI,GAAG,6BACX,CACED,QADF,CADW,CAAb;;AAMA,MAAME,KAAK,GAAGR,QAAQ,CACpBC,UADoB,CAAtB;;AAIA,MAAMQ,OAAO,GAAG,qCACdF,IADc,EAEdC,KAFc,EAGd,IAHc,CAAhB;AAMA,SAAOC,OAAO,CAACP,GAAR,CACL,UACEQ,KADF,EAEK;AAEH,QAAMC,GAAG,GAAGJ,IAAI,CACdG,KAAK,CAACE,QADQ,CAAhB;AAIA,2CACKX,UAAU,CACXS,KAAK,CAACG,SADK,CADf;AAIEC,MAAAA,QAAQ,EAAEH,GAAG,CAACG;AAJhB;AAMD,GAfI,CAAP;AAiBD,CAtCD;;eAwCe,kBACbC,IADa,EAEbC,WAFa,EAGV;AAEH,MAAMC,KAAK,GAAGF,IAAI,CAACG,MAAL,CACZ,UACEC,IADF,EAEEb,QAFF,EAGK;AAEH,QAAML,UAAU,GAAGI,OAAO,CACxBC,QADwB,EAExBU,WAFwB,CAA1B;;AAKA,QAAMI,IAAI,mCACLd,QADK;AAERL,MAAAA,UAAU,EAAVA;AAFQ,MAAV;;AAKA,yDACKkB,IADL,IAEEC,IAFF;AAID,GApBW,EAqBZ,EArBY,CAAd;AAwBA,SACEH,KADF;AAGD,C","sourcesContent":["'use strict';\n\nimport plotNNPsGet from './plotNNPsGet';\nimport NNPsCrossMatchesGet from './NNPsCrossMatchesGet';\n\nconst _NNPsGet = (\n  characters\n) => {\n\n  return characters.map(\n    (\n      {\n        text\n      },\n      index\n    ) => {\n\n      return {\n        text,\n        index\n      }; \n    }\n  );\n};\n\nconst cardGet = (\n  sentence,\n  characters\n) => {\n\n  const NNPs = plotNNPsGet(\n    [\n      sentence\n    ]\n  );\n\n  const _NNPs = _NNPsGet(\n    characters\n  );\n\n  const matches = NNPsCrossMatchesGet(\n    NNPs,\n    _NNPs,\n    true\n  );\n\n  return matches.map(\n    (\n      match\n    ) => {\n\n      const NNP = NNPs[\n        match.NNPIndex\n      ];\n\n      return {\n        ...characters[\n          match._NNPIndex\n        ],\n        distance: NNP.distance\n      };\n    }\n  );\n};\n\nexport default (\n  plot,\n  _characters\n) => {\n\n  const cards = plot.reduce(\n    (\n      memo,\n      sentence\n    ) => {\n\n      const characters = cardGet(\n        sentence,\n        _characters\n      );\n\n      const card = {\n        ...sentence,\n        characters\n      };\n\n      return [\n        ...memo,\n        card\n      ];\n    },\n    []\n  );\n\n  return (\n    cards\n  );\n};\n"],"file":"cardsCharactersAssignedGet.js"}