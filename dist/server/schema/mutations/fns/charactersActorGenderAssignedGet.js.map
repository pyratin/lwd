{"version":3,"sources":["../../../../../js/server/schema/mutations/fns/charactersActorGenderAssignedGet.js"],"names":["actorGet","actors","actorUd","ud","find","_actorUd","actorsUniqueGet","characters","reduce","memo","actor","queryGet","trim","actorsGenderAssignedGetFn","then","res","sectionLeadText","sections","text","$","cheerio","load","toArray","map","el","paragraphLead","sentenceLead","sbd","sentences","match","actorsGenderAssignedGet","result","gender","Promise","resolve","charactersActorGenderAssignedGetFn","character","charactersActorGenderAssignedGet","_characters"],"mappings":"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","sourcesContent":["'use strict';\n\nimport cheerio from 'cheerio';\nimport sbd from 'sbd';\n\nimport mediawikiFetch from './mediawikiFetch';\n\nconst actorGet = (\n  {\n    ud: actorUd\n  },\n  actors\n) => {\n\n  return actors.find(\n    (\n      {\n        ud: _actorUd\n      }\n    ) => {\n\n      return (\n        _actorUd ===\n        actorUd\n      );\n    }\n  );\n};\n\nconst actorsUniqueGet = (\n  characters\n) => {\n\n  return characters.reduce(\n    (\n      memo,\n      {\n        actor\n      }\n    ) => {\n\n      if (\n        !actorGet(\n          actor,\n          memo\n        )\n      ) {\n\n        return [\n          ...memo,\n          actor\n        ];\n      }\n\n      return (\n        memo\n      );\n    },\n    []\n  );\n};\n\nconst queryGet = (\n  actorUd\n) => {\n\n  return `\n    https://en.wikipedia.org/api/rest_v1/page/mobile-sections-lead/${\n      actorUd\n    }\n  `\n    .trim();\n};\n\nconst actorsGenderAssignedGetFn = (\n  actorUd\n) => {\n\n  return mediawikiFetch(\n    queryGet(\n      actorUd\n    )\n  )\n    .then(\n      (\n        res\n      ) => {\n\n        const sectionLeadText = res.sections[\n          0\n        ]\n          .text;\n\n        const $ = cheerio.load(\n          sectionLeadText\n        );\n\n        const [\n          paragraphLead\n        ] = $(\n          'p'\n        )\n          .toArray()\n          .map(\n            (\n              el\n            ) => {\n\n              return $(el)\n                .text();\n            }\n          );\n\n        const sentenceLead = sbd.sentences(\n          paragraphLead\n        )[\n          0\n        ];\n\n        switch (\n          true\n        ) {\n\n          case (\n            !!sentenceLead.match(\n              /(actor|comedian)/\n            )\n          ) :\n\n            return (\n              'man'\n            );\n\n          case (\n            !!sentenceLead.match(\n              /actress/\n            )\n          ) :\n\n            return (\n              'woman'\n            );\n\n          default :\n\n            return (\n              'unknown'\n            );\n        }\n      }\n    );\n};\n\nconst actorsGenderAssignedGet = (\n  actors\n) => {\n\n  return actors.reduce(\n    (\n      memo,\n      actor\n    ) => {\n\n      return memo.then(\n        (\n          res\n        ) => {\n\n          if (\n            actor.ud\n          ) {\n\n            return actorsGenderAssignedGetFn(\n              actor.ud\n            )\n              .then(\n                (\n                  result\n                ) => {\n\n                  return [\n                    ...res,\n                    {\n                      ...actor,\n                      gender: result\n                    }\n                  ];\n                }\n              );\n          }\n\n          return [\n            ...res,\n            {\n              ...actor,\n              gender: 'unknown'\n            }\n          ];\n        }\n      );\n    },\n    Promise.resolve(\n      []\n    )\n  );\n};\n\nconst charactersActorGenderAssignedGetFn = (\n  character,\n  actors\n) => {\n\n  const actor = actorGet(\n    character.actor,\n    actors\n  );\n\n  return {\n    ...character,\n    actor: {\n      ...character.actor,\n      gender: actor.gender\n    }\n  };\n};\n\nconst charactersActorGenderAssignedGet = (\n  characters,\n  actors\n) => {\n\n  return characters.reduce(\n    (\n      memo,\n      character\n    ) => {\n\n      return [\n        ...memo,\n        charactersActorGenderAssignedGetFn(\n          character,\n          actors\n        )\n      ];\n    },\n    []\n  );\n};\n\nexport default async (\n  _characters\n) => {\n\n  let actors = actorsUniqueGet(\n    _characters\n  );\n\n  actors = await actorsGenderAssignedGet(\n    actors\n  );\n\n  const characters = charactersActorGenderAssignedGet(\n    _characters,\n    actors\n  );\n\n  return (\n    characters\n  );\n};\n"],"file":"charactersActorGenderAssignedGet.js"}