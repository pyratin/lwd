{"version":3,"sources":["../../../../../js/server/schema/mutations/fns/actorGenderGet.js"],"names":["queryGet","actorUd","trim","sentenceLeadGet","$","toArray","map","el","text","paragraphLead","sentenceLead","occupationGet","occupation","parent","find","textGet","res","sectionLeadText","sections","cheerio","load","actor","genderUnknown","ud","Promise","resolve","encodeURIComponent","then","match"],"mappings":"AAAA;;;;;;;;;;;AAEA;;AAEA;;AACA;;AAEA,IAAMA,QAAQ,GAAG,SAAXA,QAAW,CACfC,OADe,EAEZ;AAEH,SAAO,+EAEHA,OAFG,UAKJC,IALI,EAAP;AAMD,CAVD;;AAYA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CACtBC,CADsB,EAEnB;AAAA,uBAICA,CAAC,CACH,GADG,CAAD,CAGDC,OAHC,GAIDC,GAJC,CAKA,UACEC,EADF,EAEK;AAEH,WAAOH,CAAC,CAACG,EAAD,CAAD,CACJC,IADI,EAAP;AAED,GAXD,CAJD;AAAA;AAAA,MAGDC,aAHC;;AAkBH,MAAMC,YAAY,GAChBD,aADmB,GAGnB,uCACEA,aADF,EAGE,CAHF,CAHmB,GAQnB,EARF;AAUA,SACEC,YADF;AAGD,CAjCD;;AAmCA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CACpBP,CADoB,EAEjB;AAEH,MAAMQ,UAAU,GAAGR,CAAC,CAClB,yBADkB,CAAD,CAGhBS,MAHgB,GAIhBC,IAJgB,CAIX,IAJW,EAKhBN,IALgB,EAAnB;AAOA,SACEI,UADF;AAGD,CAdD;;AAgBA,IAAMG,OAAO,GAAG,SAAVA,OAAU,CACdC,GADc,EAEX;AAEH,MAAMC,eAAe,GAAGD,GAAG,CAACE,QAAJ,CACtB,CADsB,EAGrBV,IAHH;;AAKA,MAAMJ,CAAC,GAAGe,oBAAQC,IAAR,CACRH,eADQ,CAAV;;AAIA,MAAMP,YAAY,GAAGP,eAAe,CAClCC,CADkC,CAApC;AAIA,MAAMQ,UAAU,GAAGD,aAAa,CAC9BP,CAD8B,CAAhC;AAIA,MAAMI,IAAI,GAAI,gBAEVE,YAFU,cAIVE,UAJU,UAOXV,IAPW,EAAd;AASA,SACEM,IADF;AAGD,CAjCD;;eAmCe,kBACba,KADa,EAEV;AAEH,MAAMC,aAAa,GAAG,SAAtB;;AAEA,MACE,EAACD,KAAD,aAACA,KAAD,uBAACA,KAAK,CAAEE,EAAR,CADF,EAEE;AAEA,WAAOC,OAAO,CAACC,OAAR,CACLH,aADK,CAAP;AAGD;;AAED,SAAO,gCACLtB,QAAQ,CACN0B,kBAAkB,CAChBL,KAAK,CAACE,EADU,CADZ,CADH,EAOJI,IAPI,CAQH,UACEX,GADF,EAEK;AAEH,QAAMR,IAAI,GAAGO,OAAO,CAClBC,GADkB,CAApB;;AAIA,YACE,IADF;AAIE,WACE,CAAC,CAACR,IAAI,CAACoB,KAAL,CACA,UADA,CADJ;AAME,eACE,OADF;;AAIF,WACE,CAAC,CAACpB,IAAI,CAACoB,KAAL,CACA,mBADA,CADJ;AAME,eACE,KADF;;AAIF;AAEE,eACEN,aADF;AA1BJ;AA8BD,GA9CE,CAAP;AAgDD,C","sourcesContent":["'use strict';\n\nimport cheerio from 'cheerio';\n\nimport mediawikiFetch from './mediawikiFetch';\nimport sentencesTokenizedGet from './sentencesTokenizedGet';\n\nconst queryGet = (\n  actorUd\n) => {\n\n  return `\n    https://en.wikipedia.org/api/rest_v1/page/mobile-sections-lead/${\n      actorUd\n    }\n  `\n    .trim();\n};\n\nconst sentenceLeadGet = (\n  $\n) => {\n\n  const [\n    paragraphLead\n  ] = $(\n    'p'\n  )\n    .toArray()\n    .map(\n      (\n        el\n      ) => {\n\n        return $(el)\n          .text();\n      }\n    );\n\n  const sentenceLead = (\n    paragraphLead\n  ) ?\n    sentencesTokenizedGet(\n      paragraphLead\n    )[\n      0\n    ] :\n    '';\n\n  return (\n    sentenceLead\n  );\n};\n\nconst occupationGet = (\n  $\n) => {\n\n  const occupation = $(\n    'th:contains(Occupation)'\n  )\n    .parent()\n    .find('td')\n    .text();\n\n  return (\n    occupation\n  );\n};\n\nconst textGet = (\n  res\n) => {\n\n  const sectionLeadText = res.sections[\n    0\n  ]\n    .text;\n\n  const $ = cheerio.load(\n    sectionLeadText\n  );\n\n  const sentenceLead = sentenceLeadGet(\n    $\n  );\n\n  const occupation = occupationGet(\n    $\n  );\n\n  const text =  `\n    ${\n      sentenceLead\n    } ${\n      occupation\n    }\n  `\n    .trim();\n\n  return (\n    text\n  );\n};\n\nexport default (\n  actor\n) => {\n\n  const genderUnknown = 'unknown';\n\n  if (\n    !actor?.ud\n  ) {\n\n    return Promise.resolve(\n      genderUnknown\n    );\n  }\n\n  return mediawikiFetch(\n    queryGet(\n      encodeURIComponent(\n        actor.ud\n      )\n    )\n  )\n    .then(\n      (\n        res\n      ) => {\n\n        const text = textGet(\n          res\n        );\n\n        switch (\n          true\n        ) {\n\n          case (\n            !!text.match(\n              /actress/i\n            )\n          ) :\n\n            return (\n              'woman'\n            );\n\n          case (\n            !!text.match(\n              /(actor|comedian)/i\n            )\n          ) :\n\n            return (\n              'man'\n            );\n\n          default :\n\n            return (\n              genderUnknown\n            );\n        }\n      }\n    );\n};\n"],"file":"actorGenderGet.js"}