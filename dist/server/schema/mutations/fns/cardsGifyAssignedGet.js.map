{"version":3,"sources":["../../../../../js/server/schema/mutations/fns/cardsGifyAssignedGet.js"],"names":["cardsForGifyGet","cards","reduce","cardMemo","card","cardIndex","character","queryGet","text","gifyApiKey","process","env","npm_package_config_GIFY_API_KEY","trim","_base64AssignedGetFn","url","then","res","buffer","toString","cardsFlatlistGifyBase64AssignedGetFn","encodeURIComponent","json","data","images","console","log","cardsFlatlistGifyBase64AssignedGet","memo","base64","Promise","resolve","cardByIndexGet","find","cardsGifyBase64AssignedGet","cardsFlatlist","_cardsFlatlist","_cards"],"mappings":"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","sourcesContent":["'use strict';\n\nimport nodeFetch from 'node-fetch';\n\nconst cardsForGifyGet = (\n  cards\n) => {\n\n  return cards.reduce(\n    (\n      cardMemo,\n      card,\n      cardIndex\n    ) => {\n\n      if (\n        !card.character\n      ) {\n\n        return [\n          ...cardMemo,\n          {\n            ...card,\n            cardIndex\n          }\n        ];\n      }\n\n      return (\n        cardMemo\n      );\n    },\n    []\n  );\n};\n\nconst queryGet = (\n  text\n) => {\n\n  const gifyApiKey = \n    process.env.npm_package_config_GIFY_API_KEY;\n\n  return `\n    https://api.giphy.com/v1/gifs/translate?api_key=${\n      gifyApiKey\n    }&weirdness:=10&s=${\n      text\n    }\n  `\n    .trim();\n};\n\nconst _base64AssignedGetFn = (\n  url\n) => {\n\n  return nodeFetch(\n    url\n  )\n    .then(\n      (\n        res\n      ) => {\n\n        return res.buffer();\n      }\n    )\n    .then(\n      (\n        buffer\n      ) => {\n\n        return `\n          data:image/jpeg;base64,${\n            buffer.toString(\n              'base64'\n            )\n          }\n        `\n          .trim();\n      }\n    );\n};\n\nconst cardsFlatlistGifyBase64AssignedGetFn = (\n  {\n    text\n  }\n) => {\n\n  return nodeFetch(\n    queryGet(\n      encodeURIComponent(\n        text\n      )\n    )\n  )\n    .then(\n      (\n        res\n      ) => {\n\n        return res.json();\n      }\n    )\n    .then(\n      (\n        json\n      ) => {\n\n        const url = json.data.images?.[\n          '480w_still'\n        ]\n          .url;\n\n        if (\n          !url\n        ) {\n\n          //eslint-disable-next-line no-console\n          console.log(\n            `\n              cardsFlatlistGifyBase64AssignedGetFn: ${\n                text\n              }\n            `\n              .trim()\n          );\n\n          return cardsFlatlistGifyBase64AssignedGetFn(\n            {\n              text\n            }\n          );\n        }\n\n        return _base64AssignedGetFn(\n          url\n        );\n      }\n    );\n};\n\nconst cardsFlatlistGifyBase64AssignedGet = (\n  cards\n) => {\n\n  return cards.reduce(\n    (\n      memo,\n      card\n    ) => {\n\n      return memo.then(\n        (\n          res\n        ) => {\n\n          return cardsFlatlistGifyBase64AssignedGetFn(\n            card\n          )\n            .then(\n              (\n                base64\n              ) => {\n\n                return [\n                  ...res,\n                  {\n                    ...card,\n                    base64\n                  }\n                ];\n              }\n            );\n        }\n      );\n    },\n    Promise.resolve(\n      []\n    )\n  );\n};\n\nconst cardByIndexGet = (\n  cards,\n  cardIndex\n) => {\n\n  return cards.find(\n    (\n      card\n    ) => {\n\n      return (\n        card.cardIndex ===\n        cardIndex\n      );\n    }\n  );\n};\n\nconst cardsGifyBase64AssignedGet = (\n  cardsFlatlist,\n  cards\n) => {\n\n  return cards.reduce(\n    (\n      memo,\n      card,\n      cardIndex\n    ) => {\n\n      const _cardsFlatlist = cardByIndexGet(\n        cardsFlatlist,\n        cardIndex\n      );\n\n      if (\n        _cardsFlatlist\n      ) {\n\n        return [\n          ...memo,\n          {\n            ...card,\n            base64: _cardsFlatlist.base64\n          }\n        ];\n      }\n\n      return [\n        ...memo,\n        card\n      ];\n    },\n    []\n  );\n};\n\nexport default async (\n  _cards\n) => {\n\n  let cardsFlatlist = cardsForGifyGet(\n    _cards\n  );\n\n  cardsFlatlist = await cardsFlatlistGifyBase64AssignedGet(\n    cardsFlatlist\n  );\n\n  const cards = cardsGifyBase64AssignedGet(\n    cardsFlatlist,\n    _cards\n  );\n\n  return (\n    cards\n  );\n};\n"],"file":"cardsGifyAssignedGet.js"}