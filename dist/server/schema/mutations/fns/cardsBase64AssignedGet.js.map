{"version":3,"sources":["../../../../../js/server/schema/mutations/fns/cardsBase64AssignedGet.js"],"names":["actorImageGet","actorImageId","db","_id","ObjectID","undefined","then","base64","gifyImageGet","gifyUrl","res","buffer","toString","trim","cardsBase64AssignedGetFn","_cards","reduce","memo","_card","result","Promise","resolve"],"mappings":"AAAA;;;;;;;;;;;;;AAEA;;AAGA;;AAEA;;;;;;AAIA,IAAMA,aAAa,GAAG,SAAhBA,aAAgB,CACpBC,YADoB,EAEpBC,EAFoB,EAGjB;AAEH,SAAO,mCACL;AACEC,IAAAA,GAAG,EAAE,IAAIC,iBAAJ,CACHH,YADG;AADP,GADK,EAMLI,SANK,EAOLH,EAPK,EASJI,IATI,CAUH,gBAIK;AAAA,QAFDC,MAEC,QAFDA,MAEC;AAEH,WACEA,MADF;AAGD,GAnBE,CAAP;AAqBD,CA1BD;;AA4BA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CACnBC,OADmB,EAEhB;AAEH,SAAO,2BACLA,OADK,EAGJH,IAHI,CAIH,UACEI,GADF,EAEK;AAEH,WAAOA,GAAG,CAACC,MAAJ,EAAP;AACD,GATE,EAWJL,IAXI,CAYH,UACEK,MADF,EAEK;AAEH,WAAO,6CAEHA,MAAM,CAACC,QAAP,CACE,QADF,CAFG,gBAOJC,IAPI,EAAP;AAQD,GAxBE,CAAP;AA0BD,CA9BD;;AAgCA,IAAMC,wBAAwB,GAAG,SAA3BA,wBAA2B,QAK/BZ,EAL+B,EAM5B;AAAA,MAJDD,YAIC,SAJDA,YAIC;AAAA,MAHDQ,OAGC,SAHDA,OAGC;AAEH,SACER,YADK,GAGLD,aAAa,CACXC,YADW,EAEXC,EAFW,CAHR,GAOLM,YAAY,CACVC,OADU,CAPd;AAUD,CAlBD;;eAoBe,kBACbM,MADa,EAEbb,EAFa,EAGV;AAEH,SAAOa,MAAM,CAACC,MAAP,CACL,UACEC,IADF,EAEEC,KAFF,EAGK;AAEH,WAAOD,IAAI,CAACX,IAAL,CACL,UACEI,GADF,EAEK;AAEH,aAAOI,wBAAwB,CAC7BI,KAD6B,EAE7BhB,EAF6B,CAAxB,CAIJI,IAJI,CAKH,UACEa,MADF,EAEK;AAEH,6DACKT,GADL,oCAGOQ,KAHP;AAIIX,UAAAA,MAAM,EAAEY;AAJZ;AAOD,OAhBE,CAAP;AAkBD,KAvBI,CAAP;AAyBD,GA/BI,EAgCLC,OAAO,CAACC,OAAR,CACE,EADF,CAhCK,CAAP;AAoCD,C","sourcesContent":["'use strict';\n\nimport {\n  ObjectID\n} from 'mongodb';\nimport nodeFetch from 'node-fetch';\n\nimport {\n  actorImageFindOne\n} from '~/js/server/data/actorImage';\n\nconst actorImageGet = (\n  actorImageId,\n  db\n) => {\n\n  return actorImageFindOne(\n    {\n      _id: new ObjectID(\n        actorImageId\n      )\n    },\n    undefined,\n    db\n  )\n    .then(\n      (\n        {\n          base64\n        }\n      ) => {\n\n        return (\n          base64\n        );\n      }\n    );\n};\n\nconst gifyImageGet = (\n  gifyUrl\n) => {\n\n  return nodeFetch(\n    gifyUrl\n  )\n    .then(\n      (\n        res\n      ) => {\n\n        return res.buffer();\n      }\n    )\n    .then(\n      (\n        buffer\n      ) => {\n\n        return `\n          data:image/jpeg;base64,${\n            buffer.toString(\n              'base64'\n            )\n          }\n        `\n          .trim();\n      }\n    );\n};\n\nconst cardsBase64AssignedGetFn = (\n  {\n    actorImageId,\n    gifyUrl\n  },\n  db\n) => {\n\n  return (\n    actorImageId\n  ) ?\n    actorImageGet(\n      actorImageId,\n      db\n    ) :\n    gifyImageGet(\n      gifyUrl\n    );\n};\n\nexport default (\n  _cards,\n  db\n) => {\n\n  return _cards.reduce(\n    (\n      memo,\n      _card\n    ) => {\n\n      return memo.then(\n        (\n          res\n        ) => {\n\n          return cardsBase64AssignedGetFn(\n            _card,\n            db\n          )\n            .then(\n              (\n                result\n              ) => {\n\n                return [\n                  ...res,\n                  {\n                    ..._card,\n                    base64: result\n                  }\n                ];\n              }\n            );\n        }\n      );\n    },\n    Promise.resolve(\n      []\n    )\n  );\n};\n"],"file":"cardsBase64AssignedGet.js"}