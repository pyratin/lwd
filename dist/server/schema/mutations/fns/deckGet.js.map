{"version":3,"sources":["../../../../../js/server/schema/mutations/fns/deckGet.js"],"names":["title","genre","plotLimit","db","movieDataBasic","plot","cast","plotText","characters","cards","deck","splash","poster"],"mappings":"AAAA;;;;;;;;;;;;;AAEA;;AACA;;AACA;;AACA;;AAEA;;AAEA;;AACA;;AAEA;;AAEA;;AAEA;;;2FAGe,iBACbA,KADa,EAEbC,KAFa,EAGbC,SAHa,EAIbC,EAJa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAOc,mCACzBH,KADyB,EAEzBE,SAFyB,CAPd;;AAAA;AAOTE,YAAAA,cAPS;;AAAA,kBAaX,EAACA,cAAD,aAACA,cAAD,uBAACA,cAAc,CAAEC,IAAjB,KACA,EAACD,cAAD,aAACA,cAAD,uBAACA,cAAc,CAAEE,IAAjB,CAdW;AAAA;AAAA;AAAA;;AAAA,6CAkBT,EAlBS;;AAAA;AAAA;AAAA,mBA0BM,+BACjBF,cAAc,CAACE,IADE,EAEjBF,cAAc,CAACC,IAFE,EAGjBD,cAAc,CAACG,QAHE,CA1BN;;AAAA;AA0BbC,YAAAA,UA1Ba;AAgCbC,YAAAA,KAAK,GAAG,0BACNL,cAAc,CAACC,IADT,EAENG,UAFM,EAGNP,KAHM,EAINE,EAJM,CAAR;AAhCa;AAAA,mBAuCM,6CACjBK,UADiB,CAvCN;;AAAA;AAuCbA,YAAAA,UAvCa;AAAA;AAAA,mBA2CM,2CACjBA,UADiB,EAEjBC,KAFiB,EAGjBL,cAAc,CAACJ,KAHE,CA3CN;;AAAA;AA2CbQ,YAAAA,UA3Ca;AAiDTE,YAAAA,IAjDS,GAiDF;AACTC,cAAAA,MAAM,EAAE;AACNX,gBAAAA,KAAK,EAAEI,cAAc,CAACJ,KADhB;AAENY,gBAAAA,MAAM,EAAER,cAAc,CAACQ,MAFjB;AAGNJ,gBAAAA,UAAU,EAAVA;AAHM,eADC;AAMTC,cAAAA,KAAK,EAALA;AANS,aAjDE;AA0DbC,YAAAA,IAAI,GAAG,gCACLA,IADK,EAELT,KAFK,CAAP;AA1Da;AAAA,mBA+DA,8CACXS,IADW,EAEXT,KAFW,EAGXE,EAHW,CA/DA;;AAAA;AA+DbO,YAAAA,IA/Da;AAqEbA,YAAAA,IAAI,GAAG,8CACLA,IADK,CAAP;AArEa;AAAA,mBAyEA,yCACXA,IADW,CAzEA;;AAAA;AAyEbA,YAAAA,IAzEa;AA6EbA,YAAAA,IAAI,GAAG,0CACLA,IADK,CAAP;AA7Ea,6CAkFXA,IAlFW;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["'use strict';\n\nimport movieDataBasicGet from '../fns/movieDataBasicGet';\nimport charactersGet from '../fns/charactersGet';\nimport cardsGet from '../fns/cardsGet';\nimport charactersMetaAssignedGet \n  from './charactersMetaAssignedGet';\nimport charactersGenderAssignedGet\n  from './charactersGenderAssignedGet';\nimport deckSpoofedGet from './deckSpoofedGet';\nimport deckActorImageIdsAssignedGet\n  from './deckActorImageIdsAssignedGet';\nimport deckRenderDetailsAssignedGet\n  from './deckRenderDetailsAssignedGet';\nimport deckGifyUrlsAssignedGet from \n  './deckGifyUrlsAssignedGet';\nimport deckSpoofableAssignedGet \n  from './deckSpoofableAssignedGet';\n\nexport default async (\n  title,\n  genre,\n  plotLimit,\n  db\n) => {\n\n  let movieDataBasic = await movieDataBasicGet(\n    title,\n    plotLimit\n  );\n\n  if (\n    !movieDataBasic?.plot ||\n    !movieDataBasic?.cast\n  ) {\n\n    return (\n      {}\n    );\n  }\n\n  let cards;\n\n  let characters;\n\n  characters = await charactersGet(\n    movieDataBasic.cast,\n    movieDataBasic.plot,\n    movieDataBasic.plotText\n  );\n\n  cards = cardsGet(\n    movieDataBasic.plot,\n    characters,\n    genre,\n    db\n  );\n\n  characters = await charactersGenderAssignedGet(\n    characters\n  );\n\n  characters = await charactersMetaAssignedGet(\n    characters,\n    cards,\n    movieDataBasic.title\n  );\n\n  let deck = {\n    splash: {\n      title: movieDataBasic.title,\n      poster: movieDataBasic.poster,\n      characters\n    },\n    cards\n  };\n\n  deck = deckSpoofedGet(\n    deck,\n    genre\n  );\n\n  deck = await deckActorImageIdsAssignedGet(\n    deck,\n    genre,\n    db\n  );\n\n  deck = deckRenderDetailsAssignedGet(\n    deck\n  );\n\n  deck = await deckGifyUrlsAssignedGet(\n    deck\n  );\n\n  deck = deckSpoofableAssignedGet(\n    deck\n  );\n\n  return (\n    deck\n  );\n};\n"],"file":"deckGet.js"}