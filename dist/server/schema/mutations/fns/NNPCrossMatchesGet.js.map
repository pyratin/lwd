{"version":3,"sources":["../../../../../js/server/schema/mutations/fns/NNPCrossMatchesGet.js"],"names":["NNP","_NNPs","strict","matches","reduce","memo","_NNP","match","text","NNPIndex","index","_NNPIndex"],"mappings":"AAAA;;;;;;;;;;;;;AAEA;;;;;;eAEe,kBACbA,GADa,EAEbC,KAFa,EAGbC,MAHa,EAIV;AAEH,MAAMC,OAAO,GAAGF,KAAK,CAACG,MAAN,CACd,UACEC,IADF,EAEEC,IAFF,EAGK;AAEH,QAAMC,KAAK,GAAG,kCACZP,GAAG,CAACQ,IADQ,EAEZF,IAAI,CAACE,IAFO,EAGZN,MAHY,CAAd;;AAMA,QACEK,KADF,EAEE;AAEA,2DACKF,IAAI,IACP,EAFF,oCAIOE,KAJP;AAKIE,QAAAA,QAAQ,EAAET,GAAG,CAACU,KALlB;AAMIC,QAAAA,SAAS,EAAEL,IAAI,CAACI;AANpB;AASD;;AAED,WACEL,IADF;AAGD,GA9Ba,EA+Bd,IA/Bc,CAAhB;;AAkCA,SACEF,OADF;AAGD,C","sourcesContent":["'use strict';\n\nimport NNPCrossMatchGet from './NNPCrossMatchGet';\n\nexport default (\n  NNP,\n  _NNPs,\n  strict\n) => {\n\n  const matches = _NNPs.reduce(\n    (\n      memo,\n      _NNP\n    ) => {\n\n      const match = NNPCrossMatchGet(\n        NNP.text,\n        _NNP.text,\n        strict\n      );\n\n      if (\n        match\n      ) {\n\n        return [\n          ...memo ||\n          [],\n          {\n            ...match,\n            NNPIndex: NNP.index,\n            _NNPIndex: _NNP.index\n          }\n        ];\n      }\n\n      return (\n        memo\n      );\n    },\n    null\n  );\n\n  return (\n    matches\n  );\n};\n\n"],"file":"NNPCrossMatchesGet.js"}