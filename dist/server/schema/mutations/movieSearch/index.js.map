{"version":3,"sources":["../../../../../js/server/schema/mutations/movieSearch/index.js"],"names":["movieSearchQueryGetFn","_text","fuzzy","fuzzySuffix","text","split","map","__text","trim","join","encodeURIComponent","movieSearchQueryGet","limit","movieSearchResultsGet","query","json","results","search","title","snippet","movieSearchResultCheck","result","cast","plot","movieSearchResultsFilteredGet","reduce","memo","_result","then","res","Promise","resolve"],"mappings":"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","sourcesContent":["'use strict';\n\nimport mediawikiFetch from '../fns/mediawikiFetch';\nimport movieDataBasicGet from '../fns/movieDataBasicGet';\n\nconst movieSearchQueryGetFn = (\n  _text,\n  fuzzy\n) => {\n\n  const fuzzySuffix = (\n    fuzzy\n  ) ?\n    '~' : \n    '';\n\n  let text = _text.split(\n    /\\s+/g\n  )\n    .map(\n      (\n        __text\n      ) => {\n\n        return `\n          ${\n            __text\n          }${\n            fuzzySuffix\n          }\n        `\n          .trim();\n      }\n    )\n    .join(\n      ' '\n    );\n\n  text = encodeURIComponent(\n    text\n  );\n\n  return (\n    text\n  );\n};\n\nconst movieSearchQueryGet = (\n  text,\n  limit,\n  fuzzy\n) => {\n\n  return `\n    https://en.wikipedia.org/w/api.php?action=query&list=search&srsearch=intitle:${\n      movieSearchQueryGetFn(\n        text,\n        fuzzy\n      )\n    }+incategory:tamil-language_films|hindi-language_films|English-language_films&srlimit=${\n      limit\n    }&format=json\n  `\n    .trim();\n};\n\nconst movieSearchResultsGet = async (\n  text,\n  limit,\n  fuzzy\n) => {\n\n  const query = movieSearchQueryGet(\n    text,\n    limit,\n    fuzzy\n  );\n\n  const json = await mediawikiFetch(\n    query\n  );\n\n  let results = json.query.search\n    .map(\n      (\n        {\n          title,\n          snippet\n        }\n      ) => {\n\n        return {\n          title,\n          snippet\n        };\n      }\n    );\n\n  return (\n    results\n  );\n};\n\nconst movieSearchResultCheck = async (\n  result\n) => {\n\n  const {\n    cast,\n    plot\n  } = await movieDataBasicGet(\n    result.title,\n    5\n  );\n\n  return (\n    !!cast &&\n    !!plot\n  );\n};\n\nconst movieSearchResultsFilteredGet = (\n  results\n) => {\n\n  return results.reduce(\n    (\n      memo,\n      _result\n    ) => {\n\n      return memo.then(\n        (\n          res\n        ) => {\n\n          return movieSearchResultCheck(\n            _result\n          )\n            .then(\n              (\n                result\n              ) => {\n\n                if (\n                  result\n                ) {\n\n                  return [\n                    ...res,\n                    _result\n                  ];\n                }\n\n                return (\n                  res\n                );\n              }\n            );\n        }\n      );\n    },\n    Promise.resolve(\n      []\n    )\n  );\n};\n\nexport default async (\n  text,\n  limit = 5,\n  fuzzy = true\n) => {\n\n  let results = await movieSearchResultsGet(\n    text,\n    limit,\n    fuzzy\n  );\n\n  results = await movieSearchResultsFilteredGet(\n    results\n  );\n\n  return (\n    results\n  );\n};\n"],"file":"index.js"}