{"version":3,"sources":["../../../js/server/fns/mediaOutputFolderInit.js"],"names":["Promise","resolve","reject","mediaOutputFolderPath","path","join","process","cwd","fs","existsSync","mkdir","error","res"],"mappings":"AAAA;;;;;;;;;AAEA;;AACA;;eAEe,oBAAM;AAEnB,SAAO,IAAIA,OAAJ,CACL,UACEC,OADF,EAEEC,MAFF,EAGK;AAEH,QAAMC,qBAAqB,GAAGC,iBAAKC,IAAL,CAC5BC,OAAO,CAACC,GAAR,EAD4B,EAE5B,cAF4B,CAA9B;;AAKA,QACE,CAACC,eAAGC,UAAH,CACCN,qBADD,CADH,EAIE;AAEA,aAAOK,eAAGE,KAAH,CACLP,qBADK,EAEL,EAFK,EAGL,UACEQ,KADF,EAEEC,GAFF,EAGK;AAEH,YACED,KADF,EAEE;AAEA,iBAAOT,MAAM,CACXS,KADW,CAAb;AAGD;;AAED,eAAOV,OAAO,CACZW,GADY,CAAd;AAGD,OApBI,CAAP;AAsBD;;AAED,WAAOX,OAAO,CACZ,IADY,CAAd;AAGD,GA5CI,CAAP;AA8CD,C","sourcesContent":["'use strict';\n\nimport fs from 'fs';\nimport path from 'path';\n\nexport default () => {\n\n  return new Promise(\n    (\n      resolve,\n      reject\n    ) => {\n\n      const mediaOutputFolderPath = path.join(\n        process.cwd(),\n        'media/output'\n      );\n\n      if (\n        !fs.existsSync(\n          mediaOutputFolderPath\n        )\n      ) {\n\n        return fs.mkdir(\n          mediaOutputFolderPath,\n          {},\n          (\n            error,\n            res\n          ) => {\n\n            if (\n              error\n            ) {\n\n              return reject(\n                error\n              );\n            }\n\n            return resolve(\n              res\n            );\n          }\n        );\n      }\n\n      return resolve(\n        null\n      );\n    }\n  );\n};\n"],"file":"mediaOutputFolderInit.js"}